{"ast":null,"code":"var _jsxFileName = \"/home/diego/Projetos/Projeto-Receita/sd-03-recipes-app-04/src/context/ContextAplication.jsx\";\nimport React, { createContext, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { getFirstMeals, getByIgredient } from '../services/foodApi';\nimport { getFirstDrinks, getDrinksByIngredient } from '../services/drink-api';\nexport const ContextAplication = createContext();\nconst user = {\n  email: '',\n  password: ''\n};\n\nconst AplicationProvider = ({\n  children\n}) => {\n  const [informationsUser, setInformationsUser] = useState(user);\n  const [searchInputVisible, setSearchInputVisible] = useState(false);\n  const [Data, setData] = useState([]);\n  const [ingredientFilter, setingredientFilter] = useState('');\n\n  const saveInput = input => {\n    const inputsLogin = {\n      email: input.email,\n      password: input.password\n    };\n    setInformationsUser(inputsLogin);\n  };\n\n  const searchInput = () => {\n    setSearchInputVisible(!searchInputVisible);\n  };\n\n  const getMeals = () => {\n    switch (ingredientFilter) {\n      case '':\n        getFirstMeals().then(answer => setData(answer.meals));\n        break;\n\n      default:\n        getByIgredient(ingredientFilter).then(answer => setData(answer.meals));\n    }\n  };\n\n  const getDrinks = () => {\n    switch (ingredientFilter) {\n      case '':\n        getFirstDrinks().then(answer => setData(answer.drinks));\n        break;\n\n      default:\n        getDrinksByIngredient(ingredientFilter).then(answer => setData(answer.drinks));\n    }\n  };\n\n  const context = {\n    informationsUser,\n    saveInput,\n    searchInputVisible,\n    searchInput,\n    Data,\n    getMeals,\n    ingredientFilter,\n    getDrinks,\n    setData,\n    setingredientFilter\n  };\n  return /*#__PURE__*/React.createElement(ContextAplication.Provider, {\n    value: context,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 5\n    }\n  }, children);\n};\n\nAplicationProvider.propTypes = {\n  children: PropTypes.node.isRequired\n};\nexport default AplicationProvider;","map":{"version":3,"sources":["/home/diego/Projetos/Projeto-Receita/sd-03-recipes-app-04/src/context/ContextAplication.jsx"],"names":["React","createContext","useState","PropTypes","getFirstMeals","getByIgredient","getFirstDrinks","getDrinksByIngredient","ContextAplication","user","email","password","AplicationProvider","children","informationsUser","setInformationsUser","searchInputVisible","setSearchInputVisible","Data","setData","ingredientFilter","setingredientFilter","saveInput","input","inputsLogin","searchInput","getMeals","then","answer","meals","getDrinks","drinks","context","propTypes","node","isRequired"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,QAA/B,QAA+C,OAA/C;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,aAAT,EAAwBC,cAAxB,QAA8C,qBAA9C;AACA,SAASC,cAAT,EAAyBC,qBAAzB,QAAsD,uBAAtD;AAEA,OAAO,MAAMC,iBAAiB,GAAGP,aAAa,EAAvC;AAEP,MAAMQ,IAAI,GAAG;AAAEC,EAAAA,KAAK,EAAE,EAAT;AAAaC,EAAAA,QAAQ,EAAE;AAAvB,CAAb;;AAEA,MAAMC,kBAAkB,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AAC3C,QAAM,CAACC,gBAAD,EAAmBC,mBAAnB,IAA0Cb,QAAQ,CAACO,IAAD,CAAxD;AACA,QAAM,CAACO,kBAAD,EAAqBC,qBAArB,IAA8Cf,QAAQ,CAAC,KAAD,CAA5D;AACA,QAAM,CAACgB,IAAD,EAAOC,OAAP,IAAkBjB,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACkB,gBAAD,EAAmBC,mBAAnB,IAA0CnB,QAAQ,CAAC,EAAD,CAAxD;;AAEA,QAAMoB,SAAS,GAAIC,KAAD,IAAW;AAC3B,UAAMC,WAAW,GAAG;AAClBd,MAAAA,KAAK,EAAEa,KAAK,CAACb,KADK;AAElBC,MAAAA,QAAQ,EAAEY,KAAK,CAACZ;AAFE,KAApB;AAIAI,IAAAA,mBAAmB,CAACS,WAAD,CAAnB;AACD,GAND;;AAQA,QAAMC,WAAW,GAAG,MAAM;AACxBR,IAAAA,qBAAqB,CAAC,CAACD,kBAAF,CAArB;AACD,GAFD;;AAIA,QAAMU,QAAQ,GAAG,MAAM;AACrB,YAAQN,gBAAR;AACE,WAAK,EAAL;AACEhB,QAAAA,aAAa,GACVuB,IADH,CACSC,MAAD,IAAYT,OAAO,CAACS,MAAM,CAACC,KAAR,CAD3B;AAEA;;AACF;AACExB,QAAAA,cAAc,CAACe,gBAAD,CAAd,CACGO,IADH,CACSC,MAAD,IAAYT,OAAO,CAACS,MAAM,CAACC,KAAR,CAD3B;AANJ;AASD,GAVD;;AAYA,QAAMC,SAAS,GAAG,MAAM;AACtB,YAAQV,gBAAR;AACE,WAAK,EAAL;AACEd,QAAAA,cAAc,GACXqB,IADH,CACSC,MAAD,IAAYT,OAAO,CAACS,MAAM,CAACG,MAAR,CAD3B;AAEA;;AACF;AACExB,QAAAA,qBAAqB,CAACa,gBAAD,CAArB,CACGO,IADH,CACSC,MAAD,IAAYT,OAAO,CAACS,MAAM,CAACG,MAAR,CAD3B;AANJ;AASD,GAVD;;AAYA,QAAMC,OAAO,GAAG;AACdlB,IAAAA,gBADc;AAEdQ,IAAAA,SAFc;AAGdN,IAAAA,kBAHc;AAIdS,IAAAA,WAJc;AAKdP,IAAAA,IALc;AAMdQ,IAAAA,QANc;AAOdN,IAAAA,gBAPc;AAQdU,IAAAA,SARc;AASdX,IAAAA,OATc;AAUdE,IAAAA;AAVc,GAAhB;AAaA,sBACE,oBAAC,iBAAD,CAAmB,QAAnB;AAA4B,IAAA,KAAK,EAAEW,OAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGnB,QADH,CADF;AAKD,CA5DD;;AA8DAD,kBAAkB,CAACqB,SAAnB,GAA+B;AAC7BpB,EAAAA,QAAQ,EAAEV,SAAS,CAAC+B,IAAV,CAAeC;AADI,CAA/B;AAIA,eAAevB,kBAAf","sourcesContent":["import React, { createContext, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { getFirstMeals, getByIgredient } from '../services/foodApi';\nimport { getFirstDrinks, getDrinksByIngredient } from '../services/drink-api';\n\nexport const ContextAplication = createContext();\n\nconst user = { email: '', password: '' };\n\nconst AplicationProvider = ({ children }) => {\n  const [informationsUser, setInformationsUser] = useState(user);\n  const [searchInputVisible, setSearchInputVisible] = useState(false);\n  const [Data, setData] = useState([]);\n  const [ingredientFilter, setingredientFilter] = useState('');\n\n  const saveInput = (input) => {\n    const inputsLogin = {\n      email: input.email,\n      password: input.password,\n    };\n    setInformationsUser(inputsLogin);\n  };\n\n  const searchInput = () => {\n    setSearchInputVisible(!searchInputVisible);\n  };\n\n  const getMeals = () => {\n    switch (ingredientFilter) {\n      case '':\n        getFirstMeals()\n          .then((answer) => setData(answer.meals));\n        break;\n      default:\n        getByIgredient(ingredientFilter)\n          .then((answer) => setData(answer.meals));\n    }\n  };\n\n  const getDrinks = () => {\n    switch (ingredientFilter) {\n      case '':\n        getFirstDrinks()\n          .then((answer) => setData(answer.drinks));\n        break;\n      default:\n        getDrinksByIngredient(ingredientFilter)\n          .then((answer) => setData(answer.drinks));\n    }\n  };\n\n  const context = {\n    informationsUser,\n    saveInput,\n    searchInputVisible,\n    searchInput,\n    Data,\n    getMeals,\n    ingredientFilter,\n    getDrinks,\n    setData,\n    setingredientFilter,\n  };\n\n  return (\n    <ContextAplication.Provider value={context}>\n      {children}\n    </ContextAplication.Provider>\n  );\n};\n\nAplicationProvider.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nexport default AplicationProvider;\n"]},"metadata":{},"sourceType":"module"}