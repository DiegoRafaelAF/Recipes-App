{"ast":null,"code":"var _jsxFileName = \"/home/diego/Projetos/Projeto-Receita/sd-03-recipes-app-04/src/components/LoginScreen.jsx\";\nimport React, { useContext, useState } from 'react';\nimport { ContextAplication } from './context/ContextAplication';\n\nconst IsEmail = (name, email, input, setInput, setInformations) => {\n  const exclude = '/[^@-.w]|^[_@.-]|[._-]{2}|[@.]{2}|(@)[^@]*1/';\n  const check = '/@[w-]+./';\n  const checkend = '/.[a-zA-Z]{2,3}$/';\n\n  if (email.search(exclude) !== -1 || email.search(check) === -1 || email.search(checkend) === -1) {\n    return setInput({ ...input,\n      [name]: email\n    }) && setInformations(false);\n  }\n\n  return setInput({ ...input,\n    [name]: email\n  }) && setInformations(true);\n};\n\nconst IsPassword = (name, password, input, setInput, setInformations) => {\n  setInput({ ...input,\n    [name]: password\n  });\n  if (input.password.length >= 6) return setInformations(true);\n  return null;\n};\n\nconst handleChangeInput = (name, ele, input, setInput) => {\n  if (name === 'email') return IsEmail(name, ele, input, setInput);\n  return IsPassword(name, ele);\n}; // const handleFormSubmit = (saveInput, input) => {\n//   saveInput(input);\n// };\n\n\nfunction createForm(saveInput, input, setInput, informations, setInformations) {\n  return /*#__PURE__*/React.createElement(\"form\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }\n  }, \"Login\"), /*#__PURE__*/React.createElement(\"input\", {\n    \"data-testid\": \"email-input\",\n    onChange: ele => handleChangeInput('email', ele.target.value, input, setInput, setInformations),\n    type: \"email\",\n    name: \"email\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    \"data-testid\": \"password-input\",\n    onChange: ele => handleChangeInput('password', ele.target.value, input, setInput, setInformations),\n    type: \"text\",\n    name: \"password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    disabled: informations,\n    \"data-testid\": \"login-submit-btn\" // onClick={handleFormSubmit(saveInput, input)}\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }\n  }, \"Entrar\"));\n}\n\nfunction LoginScreen() {\n  const {\n    saveInput\n  } = useContext(ContextAplication);\n  const [input, setInput] = useState({\n    email: '',\n    password: ''\n  });\n  const [informations, setInformations] = useState(true);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 5\n    }\n  }, createForm(saveInput, input, setInput, informations, setInformations));\n}\n\nexport default LoginScreen;","map":{"version":3,"sources":["/home/diego/Projetos/Projeto-Receita/sd-03-recipes-app-04/src/components/LoginScreen.jsx"],"names":["React","useContext","useState","ContextAplication","IsEmail","name","email","input","setInput","setInformations","exclude","check","checkend","search","IsPassword","password","length","handleChangeInput","ele","createForm","saveInput","informations","target","value","LoginScreen"],"mappings":"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","sourcesContent":["import React, { useContext, useState } from 'react';\nimport { ContextAplication } from './context/ContextAplication';\n\n\nconst IsEmail = (name, email, input, setInput, setInformations) => {\n  const exclude = '/[^@-.w]|^[_@.-]|[._-]{2}|[@.]{2}|(@)[^@]*1/';\n  const check = '/@[w-]+./';\n  const checkend = '/.[a-zA-Z]{2,3}$/';\n  if (\n    email.search(exclude) !== -1\n    || email.search(check) === -1\n    || email.search(checkend) === -1\n  ) {\n    return setInput({ ...input, [name]: email }) && setInformations(false);\n  }\n  return setInput({ ...input, [name]: email }) && setInformations(true);\n};\n\nconst IsPassword = (name, password, input, setInput, setInformations) => {\n  setInput({ ...input, [name]: password });\n  if (input.password.length >= 6) return setInformations(true);\n  return null;\n};\n\nconst handleChangeInput = (name, ele, input, setInput) => {\n  if (name === 'email') return IsEmail(name, ele, input, setInput);\n  return IsPassword(name, ele);\n};\n\n// const handleFormSubmit = (saveInput, input) => {\n//   saveInput(input);\n// };\n\nfunction createForm(saveInput, input, setInput, informations, setInformations) {\n  return (\n    <form>\n      <h2>Login</h2>\n      <input\n        data-testid=\"email-input\"\n        onChange={(ele) => handleChangeInput('email', ele.target.value, input, setInput, setInformations)}\n        type=\"email\"\n        name=\"email\"\n      />\n      <input\n        data-testid=\"password-input\"\n        onChange={(ele) => handleChangeInput('password', ele.target.value, input, setInput, setInformations)}\n        type=\"text\"\n        name=\"password\"\n      />\n      <button\n        type=\"button\"\n        disabled={informations}\n        data-testid=\"login-submit-btn\"\n        // onClick={handleFormSubmit(saveInput, input)}\n      >\n        Entrar\n      </button>\n    </form>\n  );\n}\n\nfunction LoginScreen() {\n  const { saveInput } = useContext(ContextAplication);\n  const [input, setInput] = useState({ email: '', password: '' });\n  const [informations, setInformations] = useState(true);\n\n  return (\n    <div>\n      {createForm(saveInput, input, setInput, informations, setInformations)}\n    </div>\n  );\n}\n\nexport default LoginScreen;\n"]},"metadata":{},"sourceType":"module"}