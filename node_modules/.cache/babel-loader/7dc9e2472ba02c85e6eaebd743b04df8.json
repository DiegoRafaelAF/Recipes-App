{"ast":null,"code":"var _jsxFileName = \"/home/diego/Projetos/Projeto-Receita/sd-03-recipes-app-04/src/components/Buttons.jsx\";\nimport React, { useState, useContext } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport CopyToClipboard from 'react-copy-to-clipboard';\nimport { InfoContext } from './DetailsFoodScreen';\nimport share from \"../images/shareIcon.svg\";\nimport notFavorite from \"../images/whiteHeartIcon.svg\";\nimport favorite from \"../images/blackHeartIcon.svg\";\n\nfunction changeRecipeStatus(setHasStarted, recipeInfo, hasStarted, setGoToRoute) {\n  setGoToRoute(true);\n  setHasStarted(true);\n  const {\n    idMeal,\n    strArea,\n    strCategory,\n    strMeal,\n    strMealThumb\n  } = recipeInfo;\n  const mealInfo = {\n    id: idMeal,\n    type: 'comida',\n    area: strArea.strArea,\n    category: strCategory,\n    alcoholicOrNot: '',\n    name: strMeal,\n    image: strMealThumb,\n    doneDate: undefined,\n    tags: undefined\n  };\n\n  if (!hasStarted) {\n    let storage = JSON.parse(localStorage.getItem('doneRecipes'));\n\n    if (!storage) {\n      storage = [];\n    }\n\n    const newStorage = [...storage, mealInfo];\n    localStorage.setItem('doneRecipes', JSON.stringify(newStorage));\n  }\n}\n\nfunction getLocalStorage(id) {\n  const storage = JSON.parse(localStorage.getItem('doneRecipes'));\n  let started;\n  let done;\n\n  if (!storage) {\n    started = false;\n  } else {\n    started = storage.find(e => e.id === id);\n    done = storage.find(e => e.doneDate !== undefined);\n  }\n\n  const status = {\n    started,\n    done\n  };\n  return status;\n}\n\nfunction getIfHasBeenFavorited(id) {\n  const storage = JSON.parse(localStorage.getItem('favoriteRecipes'));\n\n  if (storage) {\n    const favorited = storage.find(e => e.id === id);\n    return favorited;\n  }\n\n  return false;\n}\n\nfunction clickFavorite(setIsFavorite, recipeInfo, isfavorite) {\n  setIsFavorite(isFavorite => !isFavorite);\n  const {\n    idMeal,\n    strArea,\n    strCategory,\n    strMeal,\n    strMealThumb\n  } = recipeInfo;\n  const mealInfo = {\n    id: idMeal,\n    type: 'comida',\n    area: strArea,\n    category: strCategory,\n    alcoholicOrNot: '',\n    name: strMeal,\n    image: strMealThumb\n  };\n\n  if (!isfavorite) {\n    let storage = JSON.parse(localStorage.getItem('favoriteRecipes'));\n\n    if (!storage) {\n      storage = [];\n    }\n\n    const newStorage = [...storage, mealInfo];\n    localStorage.setItem('favoriteRecipes', JSON.stringify(newStorage));\n  }\n\n  if (isfavorite) {\n    const storage = JSON.parse(localStorage.getItem('favoriteRecipes'));\n    const newStorage = storage.filter(e => !e.id === idMeal);\n    localStorage.setItem('favoriteRecipes', JSON.stringify(newStorage));\n  }\n}\n\nfunction renderShareAndFavoriteButtons(setIsFavorite, recipeInfo, isFavorite, goToRoute, id) {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"favourite\",\n    \"data-testid\": \"favorite-btn\",\n    onClick: () => clickFavorite(setIsFavorite, recipeInfo, isFavorite),\n    src: favorite,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }\n  }, isFavorite || getIfHasBeenFavorited(id) ? /*#__PURE__*/React.createElement(\"img\", {\n    src: favorite,\n    alt: \"favorite\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 52\n    }\n  }) : /*#__PURE__*/React.createElement(\"img\", {\n    src: notFavorite,\n    alt: \"favorite\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(CopyToClipboard, {\n    text: window.location.href,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    \"data-testid\": \"share-btn\",\n    type: \"button\",\n    onClick: () => alert('Link copiado!'),\n    className: \"favourite\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: share,\n    alt: \"icon\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 11\n    }\n  }))), goToRoute && /*#__PURE__*/React.createElement(Redirect, {\n    to: `/comidas/${id}/in-progress`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 21\n    }\n  }));\n}\n\nfunction Buttons() {\n  const [hasStarted, setHasStarted] = useState(false);\n  const [goToRoute, setGoToRoute] = useState(false);\n  const [isFavorite, setIsFavorite] = useState(false);\n  const {\n    recipeInfo,\n    id\n  } = useContext(InfoContext);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"bottom-buttons\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 5\n    }\n  }, !hasStarted && !getLocalStorage(id).done && !getLocalStorage(id).started && /*#__PURE__*/React.createElement(\"button\", {\n    \"data-testid\": \"start-recipe-btn\",\n    type: \"button\",\n    onClick: () => changeRecipeStatus(setHasStarted, recipeInfo, hasStarted, setGoToRoute),\n    className: \"start-button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 9\n    }\n  }, \"Iniciar Receita\"), getLocalStorage(id).started && !getLocalStorage(id).done && /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"start-button\",\n    \"data-testid\": \"start-recipe-btn\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 9\n    }\n  }, \"Continuar Receita\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"share-and-favourite\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 7\n    }\n  }, renderShareAndFavoriteButtons(setIsFavorite, recipeInfo, isFavorite, goToRoute, id)));\n}\n\nexport default Buttons;","map":{"version":3,"sources":["/home/diego/Projetos/Projeto-Receita/sd-03-recipes-app-04/src/components/Buttons.jsx"],"names":["React","useState","useContext","Redirect","CopyToClipboard","InfoContext","changeRecipeStatus","setHasStarted","recipeInfo","hasStarted","setGoToRoute","idMeal","strArea","strCategory","strMeal","strMealThumb","mealInfo","id","type","area","category","alcoholicOrNot","name","image","doneDate","undefined","tags","storage","JSON","parse","localStorage","getItem","newStorage","setItem","stringify","getLocalStorage","started","done","find","e","status","getIfHasBeenFavorited","favorited","clickFavorite","setIsFavorite","isfavorite","isFavorite","filter","renderShareAndFavoriteButtons","goToRoute","favorite","notFavorite","window","location","href","alert","share","Buttons"],"mappings":"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","sourcesContent":["import React, { useState, useContext } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport CopyToClipboard from 'react-copy-to-clipboard';\nimport { InfoContext } from './DetailsFoodScreen';\nimport share from '../images/shareIcon.svg';\nimport notFavorite from '../images/whiteHeartIcon.svg';\nimport favorite from '../images/blackHeartIcon.svg';\n\nfunction changeRecipeStatus(setHasStarted, recipeInfo, hasStarted, setGoToRoute) {\n  setGoToRoute(true);\n  setHasStarted(true);\n  const {\n    idMeal, strArea, strCategory, strMeal, strMealThumb,\n  } = recipeInfo;\n  const mealInfo = {\n    id: idMeal,\n    type: 'comida',\n    area: strArea.strArea,\n    category: strCategory,\n    alcoholicOrNot: '',\n    name: strMeal,\n    image: strMealThumb,\n    doneDate: undefined,\n    tags: undefined,\n  };\n  if (!hasStarted) {\n    let storage = JSON.parse(localStorage.getItem('doneRecipes'));\n    if (!storage) {\n      storage = [];\n    }\n    const newStorage = [...storage, mealInfo];\n    localStorage.setItem('doneRecipes', JSON.stringify(newStorage));\n  }\n}\n\nfunction getLocalStorage(id) {\n  const storage = JSON.parse(localStorage.getItem('doneRecipes'));\n  let started;\n  let done;\n  if (!storage) {\n    started = false;\n  } else {\n    started = storage.find((e) => e.id === id);\n    done = storage.find((e) => e.doneDate !== undefined);\n  }\n  const status = { started, done };\n  return status;\n}\n\nfunction getIfHasBeenFavorited(id) {\n  const storage = JSON.parse(localStorage.getItem('favoriteRecipes'));\n  if (storage) {\n    const favorited = storage.find((e) => e.id === id);\n    return favorited;\n  }\n  return false;\n}\n\nfunction clickFavorite(setIsFavorite, recipeInfo, isfavorite) {\n  setIsFavorite((isFavorite) => !isFavorite);\n  const {\n    idMeal, strArea, strCategory, strMeal, strMealThumb,\n  } = recipeInfo;\n  const mealInfo = {\n    id: idMeal,\n    type: 'comida',\n    area: strArea,\n    category: strCategory,\n    alcoholicOrNot: '',\n    name: strMeal,\n    image: strMealThumb,\n  };\n  if (!isfavorite) {\n    let storage = JSON.parse(localStorage.getItem('favoriteRecipes'));\n    if (!storage) {\n      storage = [];\n    }\n    const newStorage = [...storage, mealInfo];\n    localStorage.setItem('favoriteRecipes', JSON.stringify(newStorage));\n  }\n  if (isfavorite) {\n    const storage = JSON.parse(localStorage.getItem('favoriteRecipes'));\n    const newStorage = storage.filter((e) => !e.id === idMeal);\n    localStorage.setItem('favoriteRecipes', JSON.stringify(newStorage));\n  }\n}\n\nfunction renderShareAndFavoriteButtons(setIsFavorite, recipeInfo, isFavorite, goToRoute, id) {\n  return (\n    <div>\n      <button\n        type=\"button\"\n        className=\"favourite\"\n        data-testid=\"favorite-btn\"\n        onClick={() => clickFavorite(setIsFavorite, recipeInfo, isFavorite)}\n        src={favorite}\n      >\n        {isFavorite || getIfHasBeenFavorited(id) ? <img src={favorite} alt=\"favorite\" />\n          : <img src={notFavorite} alt=\"favorite\" />}\n      </button>\n      <CopyToClipboard text={window.location.href}>\n        <button\n          data-testid=\"share-btn\"\n          type=\"button\"\n          onClick={() => alert('Link copiado!')}\n          className=\"favourite\"\n        >\n          <img src={share} alt=\"icon\" />\n        </button>\n      </CopyToClipboard>\n      {goToRoute && <Redirect to={`/comidas/${id}/in-progress`} />}\n    </div>\n  );\n}\n\nfunction Buttons() {\n  const [hasStarted, setHasStarted] = useState(false);\n  const [goToRoute, setGoToRoute] = useState(false);\n  const [isFavorite, setIsFavorite] = useState(false);\n  const { recipeInfo, id } = useContext(InfoContext);\n\n  return (\n    <div className=\"bottom-buttons\">\n      {!hasStarted && !getLocalStorage(id).done && !getLocalStorage(id).started && (\n        <button\n          data-testid=\"start-recipe-btn\"\n          type=\"button\"\n          onClick={() => changeRecipeStatus(setHasStarted,\n            recipeInfo, hasStarted, setGoToRoute)}\n          className=\"start-button\"\n        >\n          Iniciar Receita\n        </button>\n      )}\n      {getLocalStorage(id).started && !getLocalStorage(id).done && (\n        <button\n          type=\"button\"\n          className=\"start-button\"\n          data-testid=\"start-recipe-btn\"\n        >\n          Continuar Receita\n        </button>\n      )}\n      <div className=\"share-and-favourite\">\n        {renderShareAndFavoriteButtons(setIsFavorite, recipeInfo, isFavorite, goToRoute, id)}\n      </div>\n    </div>\n  );\n}\n\nexport default Buttons;\n"]},"metadata":{},"sourceType":"module"}