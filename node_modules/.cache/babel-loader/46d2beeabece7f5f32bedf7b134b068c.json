{"ast":null,"code":"var _jsxFileName = \"/home/diego/Projetos/Projeto-Receita/sd-03-recipes-app-04/src/components/DetailsDrinkScreen.jsx\";\nimport React, { useState, useEffect, createContext } from 'react';\nimport PropTypes from 'prop-types';\nimport { getDrinkByID } from '../services/drink-api';\nimport { getFirstMeals } from '../services/foodApi';\nimport DrinkBasicInfo from './DrinkBasicInfo';\nimport DrinkButtons from './DrinkButtons';\nexport const DrinkContext = createContext();\nexport default function DetailsDrinkScreen(props) {\n  const {\n    id\n  } = props.props.match.params;\n  const [recipeInfo, setRecipeInfo] = useState([]);\n  const [recomendation, setRecomendation] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  useEffect(() => {\n    getDrinkByID(id).then(data => {\n      setRecipeInfo(data.drinks[0]);\n      setIsLoading(false);\n    });\n    getFirstMeals().then(data => setRecomendation(data.meals));\n  }, [id]);\n  const quantity = Object.keys(recipeInfo).filter(e => e.includes('strIngredient'));\n  const ingredients = Object.keys(recipeInfo).filter(e => e.includes('strMeasure'));\n  const context = {\n    recipeInfo,\n    quantity,\n    ingredients,\n    recomendation,\n    id\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 5\n    }\n  }, isLoading && /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 21\n    }\n  }, \"Carregando...\"), !isLoading && /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(DrinkContext.Provider, {\n    value: context,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(DrinkBasicInfo, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(DrinkButtons, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }\n  }))));\n}\nDetailsDrinkScreen.propTypes = {\n  props: PropTypes.string.isRequired\n};","map":{"version":3,"sources":["/home/diego/Projetos/Projeto-Receita/sd-03-recipes-app-04/src/components/DetailsDrinkScreen.jsx"],"names":["React","useState","useEffect","createContext","PropTypes","getDrinkByID","getFirstMeals","DrinkBasicInfo","DrinkButtons","DrinkContext","DetailsDrinkScreen","props","id","match","params","recipeInfo","setRecipeInfo","recomendation","setRecomendation","isLoading","setIsLoading","then","data","drinks","meals","quantity","Object","keys","filter","e","includes","ingredients","context","propTypes","string","isRequired"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,aAArC,QAA0D,OAA1D;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,YAAT,QAA6B,uBAA7B;AACA,SAASC,aAAT,QAA8B,qBAA9B;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AAEA,OAAO,MAAMC,YAAY,GAAGN,aAAa,EAAlC;AAEP,eAAe,SAASO,kBAAT,CAA4BC,KAA5B,EAAmC;AAChD,QAAM;AAAEC,IAAAA;AAAF,MAASD,KAAK,CAACA,KAAN,CAAYE,KAAZ,CAAkBC,MAAjC;AACA,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8Bf,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAM,CAACgB,aAAD,EAAgBC,gBAAhB,IAAoCjB,QAAQ,CAAC,EAAD,CAAlD;AACA,QAAM,CAACkB,SAAD,EAAYC,YAAZ,IAA4BnB,QAAQ,CAAC,IAAD,CAA1C;AACAC,EAAAA,SAAS,CAAC,MAAM;AACdG,IAAAA,YAAY,CAACO,EAAD,CAAZ,CAAiBS,IAAjB,CAAuBC,IAAD,IAAU;AAC9BN,MAAAA,aAAa,CAACM,IAAI,CAACC,MAAL,CAAY,CAAZ,CAAD,CAAb;AACAH,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACD,KAHD;AAIAd,IAAAA,aAAa,GAAGe,IAAhB,CAAsBC,IAAD,IAAUJ,gBAAgB,CAACI,IAAI,CAACE,KAAN,CAA/C;AACD,GANQ,EAMN,CAACZ,EAAD,CANM,CAAT;AAOA,QAAMa,QAAQ,GAAGC,MAAM,CAACC,IAAP,CAAYZ,UAAZ,EAAwBa,MAAxB,CAAgCC,CAAD,IAAOA,CAAC,CAACC,QAAF,CAAW,eAAX,CAAtC,CAAjB;AACA,QAAMC,WAAW,GAAGL,MAAM,CAACC,IAAP,CAAYZ,UAAZ,EAAwBa,MAAxB,CAAgCC,CAAD,IAAOA,CAAC,CAACC,QAAF,CAAW,YAAX,CAAtC,CAApB;AACA,QAAME,OAAO,GAAG;AACdjB,IAAAA,UADc;AACFU,IAAAA,QADE;AACQM,IAAAA,WADR;AACqBd,IAAAA,aADrB;AACoCL,IAAAA;AADpC,GAAhB;AAGA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGO,SAAS,iBAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADhB,EAEG,CAACA,SAAD,iBACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,YAAD,CAAc,QAAd;AAAuB,IAAA,KAAK,EAAEa,OAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF,CAHJ,CADF;AAaD;AAEDtB,kBAAkB,CAACuB,SAAnB,GAA+B;AAC7BtB,EAAAA,KAAK,EAAEP,SAAS,CAAC8B,MAAV,CAAiBC;AADK,CAA/B","sourcesContent":["import React, { useState, useEffect, createContext } from 'react';\nimport PropTypes from 'prop-types';\nimport { getDrinkByID } from '../services/drink-api';\nimport { getFirstMeals } from '../services/foodApi';\nimport DrinkBasicInfo from './DrinkBasicInfo';\nimport DrinkButtons from './DrinkButtons';\n\nexport const DrinkContext = createContext();\n\nexport default function DetailsDrinkScreen(props) {\n  const { id } = props.props.match.params;\n  const [recipeInfo, setRecipeInfo] = useState([]);\n  const [recomendation, setRecomendation] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  useEffect(() => {\n    getDrinkByID(id).then((data) => {\n      setRecipeInfo(data.drinks[0]);\n      setIsLoading(false);\n    });\n    getFirstMeals().then((data) => setRecomendation(data.meals));\n  }, [id]);\n  const quantity = Object.keys(recipeInfo).filter((e) => e.includes('strIngredient'));\n  const ingredients = Object.keys(recipeInfo).filter((e) => e.includes('strMeasure'));\n  const context = {\n    recipeInfo, quantity, ingredients, recomendation, id,\n  };\n  return (\n    <div>\n      {isLoading && <h1>Carregando...</h1>}\n      {!isLoading && (\n        <div>\n          <DrinkContext.Provider value={context}>\n            <DrinkBasicInfo />\n            <DrinkButtons />\n          </DrinkContext.Provider>\n        </div>\n      )}\n    </div>\n  );\n}\n\nDetailsDrinkScreen.propTypes = {\n  props: PropTypes.string.isRequired,\n};\n"]},"metadata":{},"sourceType":"module"}