{"ast":null,"code":"var _jsxFileName = \"/home/diego/Projetos/Projeto-Receita/sd-03-recipes-app-04/src/components/LoginScreen.jsx\";\nimport React, { useState, useEffect, useContext } from 'react';\nimport { ContextAplication } from '../context/ContextAplication';\n\nconst handleChangeInput = (name, event, input, setInput) => {\n  setInput({ ...input,\n    [name]: event\n  });\n};\n\nconst handleFormSubmit = (saveInput, input) => {\n  saveInput(input);\n};\n\nfunction createForm(input, setInput, informations, setInformations) {\n  console.log(input, setInput, informations, setInformations);\n  return /*#__PURE__*/React.createElement(\"form\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }\n  }, \"Login\"), /*#__PURE__*/React.createElement(\"input\", {\n    \"data-testid\": \"email-input\",\n    onChange: ele => handleChangeInput('email', ele.target.value, input, setInput),\n    type: \"email\",\n    name: \"email\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    \"data-testid\": \"password-input\",\n    onChange: ele => handleChangeInput('password', ele.target.value, input, setInput),\n    type: \"text\",\n    name: \"password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }\n  }));\n}\n\nfunction LoginScreen() {\n  const {\n    saveInput,\n    informationsUser\n  } = useContext(ContextAplication);\n  const [input, setInput] = useState({\n    email: '',\n    password: ''\n  });\n  const [informations, setInformations] = useState(true);\n  useEffect(() => {\n    if (input.email.length !== 0 && (input.email.indexOf('@') < 1 || input.email.indexOf('.') < 7) || input.password.length < 6) return setInformations(true);\n    return setInformations(false);\n  }, [input]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 5\n    }\n  }, createForm(input, setInput, informations), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    disabled: informations,\n    \"data-testid\": \"login-submit-btn\",\n    onClick: () => console.log(input),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }\n  }, \"Entrar\"));\n}\n\nexport default LoginScreen;","map":{"version":3,"sources":["/home/diego/Projetos/Projeto-Receita/sd-03-recipes-app-04/src/components/LoginScreen.jsx"],"names":["React","useState","useEffect","useContext","ContextAplication","handleChangeInput","name","event","input","setInput","handleFormSubmit","saveInput","createForm","informations","setInformations","console","log","ele","target","value","LoginScreen","informationsUser","email","password","length","indexOf"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,UAArC,QAAuD,OAAvD;AACA,SAASC,iBAAT,QAAkC,8BAAlC;;AAEA,MAAMC,iBAAiB,GAAG,CAACC,IAAD,EAAOC,KAAP,EAAcC,KAAd,EAAqBC,QAArB,KAAkC;AAC1DA,EAAAA,QAAQ,CAAC,EAAE,GAAGD,KAAL;AAAY,KAACF,IAAD,GAAQC;AAApB,GAAD,CAAR;AACD,CAFD;;AAIA,MAAMG,gBAAgB,GAAG,CAACC,SAAD,EAAYH,KAAZ,KAAsB;AAC7CG,EAAAA,SAAS,CAACH,KAAD,CAAT;AACD,CAFD;;AAIA,SAASI,UAAT,CAAoBJ,KAApB,EAA2BC,QAA3B,EAAqCI,YAArC,EAAmDC,eAAnD,EAAoE;AAClEC,EAAAA,OAAO,CAACC,GAAR,CAAYR,KAAZ,EAAmBC,QAAnB,EAA6BI,YAA7B,EAA2CC,eAA3C;AACA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,eAEE;AACE,mBAAY,aADd;AAEE,IAAA,QAAQ,EAAGG,GAAD,IAASZ,iBAAiB,CAAC,OAAD,EAAUY,GAAG,CAACC,MAAJ,CAAWC,KAArB,EAA4BX,KAA5B,EAAmCC,QAAnC,CAFtC;AAGE,IAAA,IAAI,EAAC,OAHP;AAIE,IAAA,IAAI,EAAC,OAJP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,eAQE;AACE,mBAAY,gBADd;AAEE,IAAA,QAAQ,EAAGQ,GAAD,IAASZ,iBAAiB,CAAC,UAAD,EAAaY,GAAG,CAACC,MAAJ,CAAWC,KAAxB,EAA+BX,KAA/B,EAAsCC,QAAtC,CAFtC;AAGE,IAAA,IAAI,EAAC,MAHP;AAIE,IAAA,IAAI,EAAC,UAJP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARF,CADF;AAiBD;;AAED,SAASW,WAAT,GAAuB;AACrB,QAAM;AAAET,IAAAA,SAAF;AAAaU,IAAAA;AAAb,MAAkClB,UAAU,CAACC,iBAAD,CAAlD;AACA,QAAM,CAACI,KAAD,EAAQC,QAAR,IAAoBR,QAAQ,CAAC;AAAEqB,IAAAA,KAAK,EAAE,EAAT;AAAaC,IAAAA,QAAQ,EAAE;AAAvB,GAAD,CAAlC;AACA,QAAM,CAACV,YAAD,EAAeC,eAAf,IAAkCb,QAAQ,CAAC,IAAD,CAAhD;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd,QAEKM,KAAK,CAACc,KAAN,CAAYE,MAAZ,KAAuB,CAAxB,KACKhB,KAAK,CAACc,KAAN,CAAYG,OAAZ,CAAoB,GAApB,IAA2B,CAA5B,IACAjB,KAAK,CAACc,KAAN,CAAYG,OAAZ,CAAoB,GAApB,IAA2B,CAF/B,CADF,IAKIjB,KAAK,CAACe,QAAN,CAAeC,MAAf,GAAwB,CAN9B,EAOE,OAAOV,eAAe,CAAC,IAAD,CAAtB;AACF,WAAOA,eAAe,CAAC,KAAD,CAAtB;AACD,GAVQ,EAUN,CAACN,KAAD,CAVM,CAAT;AAYA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGI,UAAU,CAACJ,KAAD,EAAQC,QAAR,EAAkBI,YAAlB,CADb,eAEE;AACE,IAAA,IAAI,EAAC,QADP;AAEE,IAAA,QAAQ,EAAEA,YAFZ;AAGE,mBAAY,kBAHd;AAIE,IAAA,OAAO,EAAE,MAAME,OAAO,CAACC,GAAR,CAAYR,KAAZ,CAJjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,CADF;AAaD;;AAED,eAAeY,WAAf","sourcesContent":["import React, { useState, useEffect, useContext } from 'react';\nimport { ContextAplication } from '../context/ContextAplication';\n\nconst handleChangeInput = (name, event, input, setInput) => {\n  setInput({ ...input, [name]: event });\n};\n\nconst handleFormSubmit = (saveInput, input) => {\n  saveInput(input);\n};\n\nfunction createForm(input, setInput, informations, setInformations) {\n  console.log(input, setInput, informations, setInformations);\n  return (\n    <form>\n      <h2>Login</h2>\n      <input\n        data-testid=\"email-input\"\n        onChange={(ele) => handleChangeInput('email', ele.target.value, input, setInput)}\n        type=\"email\"\n        name=\"email\"\n      />\n      <input\n        data-testid=\"password-input\"\n        onChange={(ele) => handleChangeInput('password', ele.target.value, input, setInput)}\n        type=\"text\"\n        name=\"password\"\n      />\n    </form>\n  );\n}\n\nfunction LoginScreen() {\n  const { saveInput, informationsUser } = useContext(ContextAplication);\n  const [input, setInput] = useState({ email: '', password: '' });\n  const [informations, setInformations] = useState(true);\n\n  useEffect(() => {\n    if (\n      (\n        (input.email.length !== 0)\n        && ((input.email.indexOf('@') < 1)\n        || (input.email.indexOf('.') < 7))\n      )\n      || (input.password.length < 6)\n    ) return setInformations(true);\n    return setInformations(false);\n  }, [input]);\n\n  return (\n    <div>\n      {createForm(input, setInput, informations)}\n      <button\n        type=\"button\"\n        disabled={informations}\n        data-testid=\"login-submit-btn\"\n        onClick={() => console.log(input)}\n      >\n        Entrar\n      </button>\n    </div>\n  );\n}\n\nexport default LoginScreen;\n"]},"metadata":{},"sourceType":"module"}