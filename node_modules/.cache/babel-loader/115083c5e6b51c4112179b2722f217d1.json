{"ast":null,"code":"var _jsxFileName = \"/home/diego/Projetos/Projeto-Receita/sd-03-recipes-app-04/src/components/DoneRecipes.jsx\";\nimport React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport profileIcon from \"../images/profileIcon.svg\";\nimport shareIcon from \"../images/shareIcon.svg\";\nimport '../components/CSS/DoneRecipes.css';\n\nconst header = () => /*#__PURE__*/React.createElement(\"div\", {\n  className: \"header-recipes-done\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 3\n  }\n}, /*#__PURE__*/React.createElement(\"img\", {\n  src: profileIcon,\n  alt: \"ProfileIcon\",\n  \"data-testeid\": \"profile-top-btn\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 5\n  }\n}), /*#__PURE__*/React.createElement(\"p\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }\n}, \"Receitas Feitas\"));\n\nconst buttons = (setRecipes, state) => {\n  const food = state.filter(e => e.type === 'comida');\n  const drinck = state.filter(e => e.type === 'bebida');\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"test\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"buttons-filter\",\n    \"data-testid\": \"filter-by-all-btn\",\n    onClick: () => setRecipes(state),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }\n  }, \"All\"), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"buttons-filter\",\n    \"data-testid\": \"filter-by-food-btn\",\n    onClick: () => setRecipes(food),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }\n  }, \"Food\"), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"buttons-filter\",\n    \"data-testid\": \"filter-by-drink-btn\",\n    onClick: () => setRecipes(drinck),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }\n  }, \"Drinks\"));\n};\n\nconst copyToClipboard = (type, id, setHide) => {\n  navigator.clipboard.writeText(`http://localhost:3000/${type}s/${id}`).then(() => {\n    setHide(false);\n    setTimeout(() => {\n      setHide(true);\n    }, 2000);\n  });\n};\n\nconst renderRecipes = (recipes, setHide) => recipes.map(({\n  id,\n  type,\n  category,\n  alcoholicOrNot,\n  name,\n  image,\n  area,\n  doneDate,\n  tags\n}, idxMap) => {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"recipes-done\",\n    key: name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: `${type}s/${id}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    \"data-testid\": `${idxMap}-horizontal-image`,\n    src: image,\n    alt: \"Imagem da Receita Finalizada\",\n    width: \"150px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"p\", {\n    \"data-testid\": `${idxMap}-horizontal-top-text`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 9\n    }\n  }, `${area} - ${category}`), type === 'bebida' ? /*#__PURE__*/React.createElement(\"p\", {\n    \"data-testid\": `${idxMap}-horizontal-top-text`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }\n  }, alcoholicOrNot) : null, /*#__PURE__*/React.createElement(Link, {\n    to: `${type}s/${id}`,\n    \"data-testid\": `${idxMap}-horizontal-name`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }\n  }, name), /*#__PURE__*/React.createElement(\"p\", {\n    \"data-testid\": `${idxMap}-horizontal-done-date`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 9\n    }\n  }, doneDate), tags.map(tag => /*#__PURE__*/React.createElement(\"p\", {\n    key: id,\n    \"data-testid\": `${idxMap}-${tag}-horizontal-tag`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 11\n    }\n  }, `${tag}`)), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    \"data-testid\": `${idxMap}-horizontal-share-btn`,\n    onClick: () => copyToClipboard(type, id, setHide),\n    src: shareIcon,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: shareIcon,\n    alt: \"icon\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 11\n    }\n  })));\n});\n\nconst DoneRecipes = () => {\n  const [recipes, setRecipes] = useState(JSON.parse(localStorage.getItem('doneRecipes')));\n  const state = JSON.parse(localStorage.getItem('doneRecipes'));\n  const [hide, setHide] = useState(true);\n  useEffect(() => {\n    renderRecipes(recipes);\n  }, [recipes]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 5\n    }\n  }, state && header(), state && buttons(setRecipes, state), recipes && renderRecipes(recipes, setHide), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"alert\",\n    hidden: hide,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }\n  }, \"Link copiado!\"));\n};\n\nexport default DoneRecipes;","map":{"version":3,"sources":["/home/diego/Projetos/Projeto-Receita/sd-03-recipes-app-04/src/components/DoneRecipes.jsx"],"names":["React","useState","useEffect","Link","header","profileIcon","buttons","setRecipes","state","food","filter","e","type","drinck","copyToClipboard","id","setHide","navigator","clipboard","writeText","then","setTimeout","renderRecipes","recipes","map","category","alcoholicOrNot","name","image","area","doneDate","tags","idxMap","tag","shareIcon","DoneRecipes","JSON","parse","localStorage","getItem","hide"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,IAAT,QAAqB,kBAArB;;;AAIA,OAAO,mCAAP;;AAEA,MAAMC,MAAM,GAAG,mBACb;AAAK,EAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACE;AACE,EAAA,GAAG,EAAEC,WADP;AAEE,EAAA,GAAG,EAAC,aAFN;AAGE,kBAAa,iBAHf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADF,eAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBANF,CADF;;AAWA,MAAMC,OAAO,GAAG,CAACC,UAAD,EAAaC,KAAb,KAAuB;AACrC,QAAMC,IAAI,GAAGD,KAAK,CAACE,MAAN,CAAcC,CAAD,IAAOA,CAAC,CAACC,IAAF,KAAW,QAA/B,CAAb;AACA,QAAMC,MAAM,GAAGL,KAAK,CAACE,MAAN,CAAcC,CAAD,IAAOA,CAAC,CAACC,IAAF,KAAW,QAA/B,CAAf;AACA,sBACE;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AACE,IAAA,IAAI,EAAC,QADP;AAEE,IAAA,SAAS,EAAC,gBAFZ;AAGE,mBAAY,mBAHd;AAIE,IAAA,OAAO,EAAE,MAAML,UAAU,CAACC,KAAD,CAJ3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WADF,eASE;AACE,IAAA,IAAI,EAAC,QADP;AAEE,IAAA,SAAS,EAAC,gBAFZ;AAGE,mBAAY,oBAHd;AAIE,IAAA,OAAO,EAAE,MAAMD,UAAU,CAACE,IAAD,CAJ3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YATF,eAiBE;AACE,IAAA,IAAI,EAAC,QADP;AAEE,IAAA,SAAS,EAAC,gBAFZ;AAGE,mBAAY,qBAHd;AAIE,IAAA,OAAO,EAAE,MAAMF,UAAU,CAACM,MAAD,CAJ3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAjBF,CADF;AA4BD,CA/BD;;AAiCA,MAAMC,eAAe,GAAG,CAACF,IAAD,EAAOG,EAAP,EAAWC,OAAX,KAAuB;AAC7CC,EAAAA,SAAS,CAACC,SAAV,CAAoBC,SAApB,CAA+B,yBAAwBP,IAAK,KAAIG,EAAG,EAAnE,EACGK,IADH,CACQ,MAAM;AACVJ,IAAAA,OAAO,CAAC,KAAD,CAAP;AACAK,IAAAA,UAAU,CAAC,MAAM;AACfL,MAAAA,OAAO,CAAC,IAAD,CAAP;AACD,KAFS,EAEP,IAFO,CAAV;AAGD,GANH;AAOD,CARD;;AAUA,MAAMM,aAAa,GAAG,CAACC,OAAD,EAAUP,OAAV,KACpBO,OAAO,CAACC,GAAR,CAAY,CAAC;AACXT,EAAAA,EADW;AAEXH,EAAAA,IAFW;AAGXa,EAAAA,QAHW;AAIXC,EAAAA,cAJW;AAKXC,EAAAA,IALW;AAMXC,EAAAA,KANW;AAOXC,EAAAA,IAPW;AAQXC,EAAAA,QARW;AASXC,EAAAA;AATW,CAAD,EAUTC,MAVS,KAUE;AACZ,sBACE;AAAK,IAAA,SAAS,EAAC,cAAf;AAA8B,IAAA,GAAG,EAAEL,IAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD;AAAM,IAAA,EAAE,EAAG,GAAEf,IAAK,KAAIG,EAAG,EAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AACE,mBAAc,GAAEiB,MAAO,mBADzB;AAEE,IAAA,GAAG,EAAEJ,KAFP;AAGE,IAAA,GAAG,EAAC,8BAHN;AAIE,IAAA,KAAK,EAAC,OAJR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,eASE;AAAG,mBAAc,GAAEI,MAAO,sBAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAmD,GAAEH,IAAK,MAAKJ,QAAS,EAAxE,CATF,EAUGb,IAAI,KAAK,QAAT,gBACG;AAAG,mBAAc,GAAEoB,MAAO,sBAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAkDN,cAAlD,CADH,GAEG,IAZN,eAaE,oBAAC,IAAD;AAAM,IAAA,EAAE,EAAG,GAAEd,IAAK,KAAIG,EAAG,EAAzB;AAA4B,mBAAc,GAAEiB,MAAO,kBAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAuEL,IAAvE,CAbF,eAcE;AAAG,mBAAc,GAAEK,MAAO,uBAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAmDF,QAAnD,CAdF,EAeGC,IAAI,CAACP,GAAL,CAAUS,GAAD,iBACR;AAAG,IAAA,GAAG,EAAElB,EAAR;AAAY,mBAAc,GAAEiB,MAAO,IAAGC,GAAI,iBAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA8D,GAAEA,GAAI,EAApE,CADD,CAfH,eAkBE;AACE,IAAA,IAAI,EAAC,QADP;AAEE,mBAAc,GAAED,MAAO,uBAFzB;AAGE,IAAA,OAAO,EAAE,MAAMlB,eAAe,CAACF,IAAD,EAAOG,EAAP,EAAWC,OAAX,CAHhC;AAIE,IAAA,GAAG,EAAEkB,SAJP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAME;AAAK,IAAA,GAAG,EAAEA,SAAV;AAAqB,IAAA,GAAG,EAAC,MAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANF,CAlBF,CADF;AA6BD,CAxCD,CADF;;AA4CA,MAAMC,WAAW,GAAG,MAAM;AACxB,QAAM,CAACZ,OAAD,EAAUhB,UAAV,IAAwBN,QAAQ,CAACmC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,aAArB,CAAX,CAAD,CAAtC;AACA,QAAM/B,KAAK,GAAG4B,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,aAArB,CAAX,CAAd;AACA,QAAM,CAACC,IAAD,EAAOxB,OAAP,IAAkBf,QAAQ,CAAC,IAAD,CAAhC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACdoB,IAAAA,aAAa,CAACC,OAAD,CAAb;AACD,GAFQ,EAEN,CAACA,OAAD,CAFM,CAAT;AAIA,sBACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGf,KAAK,IAAIJ,MAAM,EADlB,EAEGI,KAAK,IAAIF,OAAO,CAACC,UAAD,EAAaC,KAAb,CAFnB,EAGGe,OAAO,IAAID,aAAa,CAACC,OAAD,EAAUP,OAAV,CAH3B,eAIE;AAAG,IAAA,SAAS,EAAC,OAAb;AAAqB,IAAA,MAAM,EAAEwB,IAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAJF,CADF;AAQD,CAjBD;;AAmBA,eAAeL,WAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\n\nimport profileIcon from '../images/profileIcon.svg';\nimport shareIcon from '../images/shareIcon.svg';\nimport '../components/CSS/DoneRecipes.css';\n\nconst header = () => (\n  <div className=\"header-recipes-done\">\n    <img\n      src={profileIcon}\n      alt=\"ProfileIcon\"\n      data-testeid=\"profile-top-btn\"\n    />\n    <p>Receitas Feitas</p>\n  </div>\n);\n\nconst buttons = (setRecipes, state) => {\n  const food = state.filter((e) => e.type === 'comida');\n  const drinck = state.filter((e) => e.type === 'bebida');\n  return (\n    <div className=\"test\">\n      <button\n        type=\"button\"\n        className=\"buttons-filter\"\n        data-testid=\"filter-by-all-btn\"\n        onClick={() => setRecipes(state)}\n      >\n        All\n      </button>\n      <button\n        type=\"button\"\n        className=\"buttons-filter\"\n        data-testid=\"filter-by-food-btn\"\n        onClick={() => setRecipes(food)}\n      >\n        Food\n      </button>\n      <button\n        type=\"button\"\n        className=\"buttons-filter\"\n        data-testid=\"filter-by-drink-btn\"\n        onClick={() => setRecipes(drinck)}\n      >\n        Drinks\n      </button>\n    </div>\n  );\n};\n\nconst copyToClipboard = (type, id, setHide) => {\n  navigator.clipboard.writeText(`http://localhost:3000/${type}s/${id}`)\n    .then(() => {\n      setHide(false);\n      setTimeout(() => {\n        setHide(true);\n      }, 2000);\n    });\n};\n\nconst renderRecipes = (recipes, setHide) => (\n  recipes.map(({\n    id,\n    type,\n    category,\n    alcoholicOrNot,\n    name,\n    image,\n    area,\n    doneDate,\n    tags,\n  }, idxMap) => {\n    return (\n      <div className=\"recipes-done\" key={name}>\n        <Link to={`${type}s/${id}`}>\n          <img\n            data-testid={`${idxMap}-horizontal-image`}\n            src={image}\n            alt=\"Imagem da Receita Finalizada\"\n            width=\"150px\"\n          />\n        </Link>\n        <p data-testid={`${idxMap}-horizontal-top-text`}>{`${area} - ${category}`}</p>\n        {type === 'bebida'\n          ? <p data-testid={`${idxMap}-horizontal-top-text`}>{alcoholicOrNot}</p>\n          : null}\n        <Link to={`${type}s/${id}`} data-testid={`${idxMap}-horizontal-name`}>{name}</Link>\n        <p data-testid={`${idxMap}-horizontal-done-date`}>{doneDate}</p>\n        {tags.map((tag) => (\n          <p key={id} data-testid={`${idxMap}-${tag}-horizontal-tag`}>{`${tag}`}</p>\n        ))}\n        <button\n          type=\"button\"\n          data-testid={`${idxMap}-horizontal-share-btn`}\n          onClick={() => copyToClipboard(type, id, setHide)}\n          src={shareIcon}\n        >\n          <img src={shareIcon} alt=\"icon\" />\n        </button>\n      </div>\n    );\n  })\n);\n\nconst DoneRecipes = () => {\n  const [recipes, setRecipes] = useState(JSON.parse(localStorage.getItem('doneRecipes')));\n  const state = JSON.parse(localStorage.getItem('doneRecipes'));\n  const [hide, setHide] = useState(true);\n\n  useEffect(() => {\n    renderRecipes(recipes);\n  }, [recipes]);\n\n  return (\n    <div className=\"container\">\n      {state && header()}\n      {state && buttons(setRecipes, state)}\n      {recipes && renderRecipes(recipes, setHide)}\n      <p className=\"alert\" hidden={hide}>Link copiado!</p>\n    </div>\n  );\n};\n\nexport default DoneRecipes;\n"]},"metadata":{},"sourceType":"module"}