{"ast":null,"code":"import _slicedToArray from\"/home/diego/GitHub/recipes-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import _defineProperty from\"/home/diego/GitHub/recipes-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _objectSpread from\"/home/diego/GitHub/recipes-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import React,{useEffect,useState}from'react';import{getMealById}from'../services/foodApi';import{mountRecipeList,getIfHasBeenFavorited}from'./functionsProgressScreen';import checkedlist,{checkedList}from'./checklist';import MealsRenderRecipesInProgress from'./helpersComponents/MealsRenderRecipesInProgress';function getLocalStorage(id){var checkLocalStorage=JSON.parse(localStorage.getItem('inProgressRecipes'));if(checkLocalStorage===null){checkLocalStorage={cocktails:[],meals:[]};}var arr;if(checkLocalStorage.meals[id]===undefined){arr=checkedList.checkbox;var newStorage=_objectSpread(_objectSpread({},checkLocalStorage),{},{meals:_objectSpread(_objectSpread({},checkLocalStorage.meals),{},_defineProperty({},id,arr))});localStorage.setItem('inProgressRecipes',JSON.stringify(newStorage));checkLocalStorage=newStorage;}else{arr=checkLocalStorage.meals[id];var _newStorage=_objectSpread(_objectSpread({},checkLocalStorage),{},{meals:_objectSpread(_objectSpread({},checkLocalStorage.meals),{},_defineProperty({},id,arr))});localStorage.setItem('inProgressRecipes',JSON.stringify(_newStorage));checkLocalStorage=_newStorage;}return checkLocalStorage;}function ProgressFoodScreen(props){var ingredientsDoneList=[];var id=props.match.params.id;var location=props.location,history=props.history;var pathname=location.pathname;var _useState=useState([]),_useState2=_slicedToArray(_useState,2),inProgressRecipe=_useState2[0],setInProgressRecipe=_useState2[1];var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),showCopyAlert=_useState4[0],setShowCopyAlert=_useState4[1];var _useState5=useState(false),_useState6=_slicedToArray(_useState5,2),isFavorite=_useState6[0],setIsFavorite=_useState6[1];var _useState7=useState(0),_useState8=_slicedToArray(_useState7,2),countChecked=_useState8[0],setCountChecked=_useState8[1];var _useState9=useState(checkedlist),_useState10=_slicedToArray(_useState9,2),checked=_useState10[0],setChecked=_useState10[1];var checkLocalStorage=getLocalStorage(id);useEffect(function(){getMealById(id).then(function(data){setInProgressRecipe(data.meals[0]);});if(getIfHasBeenFavorited(id)){setIsFavorite(true);}},[id,checkLocalStorage,checked,countChecked]);var data=mountRecipeList(inProgressRecipe,checked,ingredientsDoneList);var buttonEnabled=countChecked===data.length;console.log(data);return/*#__PURE__*/React.createElement(MealsRenderRecipesInProgress,{values:{data:data,buttonEnabled:buttonEnabled,inProgressRecipe:inProgressRecipe,showCopyAlert:showCopyAlert,setShowCopyAlert:setShowCopyAlert,checkLocalStorage:checkLocalStorage,isFavorite:isFavorite,id:id,checked:checked,setCountChecked:setCountChecked,setChecked:setChecked,countChecked:countChecked,setIsFavorite:setIsFavorite,history:history,pathname:pathname}});}export default ProgressFoodScreen;","map":{"version":3,"sources":["/home/diego/GitHub/recipes-app/src/components/ProgressFoodScreen.jsx"],"names":["React","useEffect","useState","getMealById","mountRecipeList","getIfHasBeenFavorited","checkedlist","checkedList","MealsRenderRecipesInProgress","getLocalStorage","id","checkLocalStorage","JSON","parse","localStorage","getItem","cocktails","meals","arr","undefined","checkbox","newStorage","setItem","stringify","ProgressFoodScreen","props","ingredientsDoneList","match","params","location","history","pathname","inProgressRecipe","setInProgressRecipe","showCopyAlert","setShowCopyAlert","isFavorite","setIsFavorite","countChecked","setCountChecked","checked","setChecked","then","data","buttonEnabled","length","console","log"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { getMealById } from '../services/foodApi';\nimport { mountRecipeList, getIfHasBeenFavorited } from './functionsProgressScreen';\nimport checkedlist, { checkedList } from './checklist';\nimport MealsRenderRecipesInProgress from './helpersComponents/MealsRenderRecipesInProgress';\n\nfunction getLocalStorage(id) {\n  let checkLocalStorage = JSON.parse(localStorage.getItem('inProgressRecipes'));\n  if (checkLocalStorage === null) {\n    checkLocalStorage = { cocktails: [], meals: [] };\n  }\n\n  let arr;\n\n  if (checkLocalStorage.meals[id] === undefined) {\n    arr = checkedList.checkbox;\n    const newStorage = { ...checkLocalStorage, meals: { ...checkLocalStorage.meals, [id]: arr } };\n    localStorage.setItem('inProgressRecipes', JSON.stringify(newStorage));\n    checkLocalStorage = newStorage;\n  } else {\n    arr = checkLocalStorage.meals[id];\n    const newStorage = { ...checkLocalStorage, meals: { ...checkLocalStorage.meals, [id]: arr } };\n    localStorage.setItem('inProgressRecipes', JSON.stringify(newStorage));\n    checkLocalStorage = newStorage;\n  }\n  return checkLocalStorage;\n}\nfunction ProgressFoodScreen(props) {\n  const ingredientsDoneList = [];\n\n  const { match: { params: { id } } } = props;\n  const { location, history } = props;\n  const { pathname } = location;\n\n  const [inProgressRecipe, setInProgressRecipe] = useState([]);\n  const [showCopyAlert, setShowCopyAlert] = useState(false);\n  const [isFavorite, setIsFavorite] = useState(false);\n  const [countChecked, setCountChecked] = useState(0);\n  const [checked, setChecked] = useState(checkedlist);\n\n  const checkLocalStorage = getLocalStorage(id);\n\n  useEffect(() => {\n    getMealById(id)\n      .then((data) => { setInProgressRecipe(data.meals[0]); });\n    if (getIfHasBeenFavorited(id)) { setIsFavorite(true); }\n  }, [id, checkLocalStorage, checked, countChecked]);\n\n  const data = mountRecipeList(inProgressRecipe, checked, ingredientsDoneList);\n  const buttonEnabled = countChecked === data.length;\n  console.log(data);\n  return (\n    <MealsRenderRecipesInProgress\n      values={{\n        data,\n        buttonEnabled,\n        inProgressRecipe,\n        showCopyAlert,\n        setShowCopyAlert,\n        checkLocalStorage,\n        isFavorite,\n        id,\n        checked,\n        setCountChecked,\n        setChecked,\n        countChecked,\n        setIsFavorite,\n        history,\n        pathname,\n      }}\n    />\n  );\n}\nProgressFoodScreen.propTypes = {\n  match: PropTypes.string.isRequired,\n  location: PropTypes.string.isRequired,\n  history: PropTypes.string.isRequired,\n};\n\nexport default ProgressFoodScreen;\n"]},"metadata":{},"sourceType":"module"}