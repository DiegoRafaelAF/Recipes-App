{"ast":null,"code":"var _jsxFileName = \"/home/diego/Projetos/Projeto-Receita/sd-03-recipes-app-04/src/components/DoneRecipes.jsx\";\nimport React, { useContext, useEffect } from 'react';\nimport CopyToClipboard from 'react-copy-to-clipboard';\nimport { Link } from 'react-router-dom';\nimport profileIcon from \"../images/profileIcon.svg\";\nimport shareIcon from \"../images/shareIcon.svg\";\nimport '../components/CSS/DoneRecipes.css';\nimport { ContextAplication } from '../context/ContextAplication';\n\nconst header = () => /*#__PURE__*/React.createElement(\"div\", {\n  className: \"header-recipes-done\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 3\n  }\n}, /*#__PURE__*/React.createElement(\"img\", {\n  src: profileIcon,\n  alt: \"ProfileIcon\",\n  \"data-testeid\": \"profile-top-btn\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }\n}), /*#__PURE__*/React.createElement(\"p\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }\n}, \"Receitas Feitas\"));\n\nconst buttons = (setRecipes, state) => {\n  const food = state.filter(e => e.type === 'comida');\n  const drinck = state.filter(e => e.type === 'bebida');\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"test\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"buttons-filter\",\n    \"data-testid\": \"filter-by-all-btn\",\n    onClick: () => setRecipes(state),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }\n  }, \"All\"), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"buttons-filter\",\n    \"data-testid\": \"filter-by-food-btn\",\n    onClick: () => setRecipes(food),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }\n  }, \"Food\"), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"buttons-filter\",\n    \"data-testid\": \"filter-by-drink-btn\",\n    onClick: () => setRecipes(drinck),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }\n  }, \"Drinks\"));\n};\n\nconst renderRecipes = recipes => {\n  console.log(recipes);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 5\n    }\n  }, recipes.map(({\n    image,\n    id,\n    name,\n    category,\n    type\n  }) => {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"recipes-done\",\n      key: id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Link, {\n      to: `${type}s/${id}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      \"data-testid\": `${id}-horizontal-image`,\n      src: image,\n      alt: \"Imagem da Receita Finalizada\",\n      width: \"150px\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 15\n      }\n    })), /*#__PURE__*/React.createElement(\"p\", {\n      \"data-testid\": `${id}-horizontal-top-text`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 13\n      }\n    }, category), /*#__PURE__*/React.createElement(Link, {\n      to: `${type}s/${id}`,\n      \"data-testid\": `${id}-horizontal-name`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 13\n      }\n    }, name), /*#__PURE__*/React.createElement(\"p\", {\n      \"data-testid\": `${id}-horizontal-done-date`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 13\n      }\n    }, id), /*#__PURE__*/React.createElement(\"p\", {\n      \"data-testid\": `${id}-${name}-horizontal-tag`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 13\n      }\n    }, category), /*#__PURE__*/React.createElement(CopyToClipboard, {\n      text: navigator.clipboard.writeText(window.location.href),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      className: \"share\",\n      type: \"button\",\n      \"data-testid\": \"filter-by-drink-btn\",\n      onClick: () => alert('Link copiado!'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: shareIcon,\n      alt: \"icon\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }\n    }))));\n  }));\n};\n\nconst DoneRecipes = () => {\n  const {\n    Data\n  } = useContext(ContextAplication);\n  console.log(Data); // const [recipes, setRecipes] =\n  // const state =\n  // useEffect(() => {\n  //   renderRecipes(recipes);\n  // }, [recipes]);\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 5\n    }\n  });\n};\n\nexport default DoneRecipes;","map":{"version":3,"sources":["/home/diego/Projetos/Projeto-Receita/sd-03-recipes-app-04/src/components/DoneRecipes.jsx"],"names":["React","useContext","useEffect","CopyToClipboard","Link","ContextAplication","header","profileIcon","buttons","setRecipes","state","food","filter","e","type","drinck","renderRecipes","recipes","console","log","map","image","id","name","category","navigator","clipboard","writeText","window","location","href","alert","shareIcon","DoneRecipes","Data"],"mappings":"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","sourcesContent":["import React, { useContext, useEffect } from 'react';\nimport CopyToClipboard from 'react-copy-to-clipboard';\nimport { Link } from 'react-router-dom';\n\nimport profileIcon from '../images/profileIcon.svg';\nimport shareIcon from '../images/shareIcon.svg';\nimport '../components/CSS/DoneRecipes.css';\nimport { ContextAplication } from '../context/ContextAplication';\n\nconst header = () => (\n  <div className=\"header-recipes-done\">\n    <img\n      src={profileIcon}\n      alt=\"ProfileIcon\"\n      data-testeid=\"profile-top-btn\"\n    />\n    <p>Receitas Feitas</p>\n  </div>\n);\n\nconst buttons = (setRecipes, state) => {\n  const food = state.filter((e) => e.type === 'comida');\n  const drinck = state.filter((e) => e.type === 'bebida');\n  return (\n    <div className=\"test\">\n      <button\n        type=\"button\"\n        className=\"buttons-filter\"\n        data-testid=\"filter-by-all-btn\"\n        onClick={() => setRecipes(state)}\n      >\n        All\n      </button>\n      <button\n        type=\"button\"\n        className=\"buttons-filter\"\n        data-testid=\"filter-by-food-btn\"\n        onClick={() => setRecipes(food)}\n      >\n        Food\n      </button>\n      <button\n        type=\"button\"\n        className=\"buttons-filter\"\n        data-testid=\"filter-by-drink-btn\"\n        onClick={() => setRecipes(drinck)}\n      >\n        Drinks\n      </button>\n    </div>\n  );\n};\n\nconst renderRecipes = (recipes) => {\n  console.log(recipes);\n  return (\n    <div>\n      {recipes.map(({\n        image,\n        id,\n        name,\n        category,\n        type,\n      }) => {\n        return (\n          <div className=\"recipes-done\" key={id}>\n            <Link to={`${type}s/${id}`}>\n              <img\n                data-testid={`${id}-horizontal-image`}\n                src={image}\n                alt=\"Imagem da Receita Finalizada\"\n                width=\"150px\"\n              />\n            </Link>\n            <p data-testid={`${id}-horizontal-top-text`}>{category}</p>\n            <Link to={`${type}s/${id}`} data-testid={`${id}-horizontal-name`}>{name}</Link>\n            <p data-testid={`${id}-horizontal-done-date`}>{id}</p>\n            <p data-testid={`${id}-${name}-horizontal-tag`}>{category}</p>\n            <CopyToClipboard text={navigator.clipboard.writeText(window.location.href)}>\n              <button\n                className=\"share\"\n                type=\"button\"\n                data-testid=\"filter-by-drink-btn\"\n                onClick={() => alert('Link copiado!')}\n              >\n                <img src={shareIcon} alt=\"icon\" />\n              </button>\n            </CopyToClipboard>\n          </div>\n        );\n      })}\n    </div>\n  );\n};\n\nconst DoneRecipes = () => {\n  const { Data } = useContext(ContextAplication);\n\n  console.log(Data);\n  // const [recipes, setRecipes] =\n  // const state =\n  // useEffect(() => {\n  //   renderRecipes(recipes);\n  // }, [recipes]);\n\n  return (\n    <div className=\"container\">\n      {/* {header()}\n      {buttons(setRecipes, state)}\n      {recipes && renderRecipes(recipes)} */}\n    </div>\n  );\n};\n\nexport default DoneRecipes;\n"]},"metadata":{},"sourceType":"module"}