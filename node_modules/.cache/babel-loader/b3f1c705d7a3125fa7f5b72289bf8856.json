{"ast":null,"code":"var _jsxFileName = \"/home/diego/Projetos/Projeto-Receita/sd-03-recipes-app-04/src/components/DrinkButtons.jsx\";\nimport React, { useState, useContext, useEffect } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport CopyToClipboard from 'react-copy-to-clipboard';\nimport { DrinkContext } from './DetailsDrinkScreen';\nimport share from \"../images/shareIcon.svg\";\nimport notFavorite from \"../images/whiteHeartIcon.svg\";\nimport favorite from \"../images/blackHeartIcon.svg\";\nimport { getLocalStorage, getIfHasBeenFavorited } from './FoodButtons';\nimport '../components/CSS/FavoriteRecipes.css';\n\nfunction changeRecipeStatus(setHasStarted, recipeInfo, hasStarted, setGoToRoute) {\n  setGoToRoute(true);\n  setHasStarted(true);\n  const {\n    idDrink,\n    strDrink,\n    strDrinkThumb,\n    strAlcoholic,\n    strCategory\n  } = recipeInfo;\n  const drinkInfo = {\n    id: idDrink,\n    type: 'bebida',\n    area: '',\n    category: strCategory,\n    alcoholicOrNot: strAlcoholic,\n    name: strDrink,\n    image: strDrinkThumb,\n    doneDate: undefined,\n    tags: undefined\n  };\n\n  if (!hasStarted) {\n    let storage = JSON.parse(localStorage.getItem('doneRecipes'));\n\n    if (!storage) {\n      storage = [];\n    }\n\n    const newStorage = [...storage, drinkInfo];\n    localStorage.setItem('doneRecipes', JSON.stringify(newStorage));\n  }\n}\n\nfunction clickFavorite(setIsFavorite, recipeInfo, isFavorite) {\n  setIsFavorite(fav => !fav);\n  const {\n    idDrink,\n    strDrink,\n    strDrinkThumb,\n    strAlcoholic,\n    strCategory\n  } = recipeInfo;\n  const drinkInfo = {\n    id: idDrink,\n    type: 'bebida',\n    area: '',\n    category: strCategory,\n    alcoholicOrNot: strAlcoholic,\n    name: strDrink,\n    image: strDrinkThumb\n  };\n  let storage = JSON.parse(localStorage.getItem('favoriteRecipes'));\n\n  if (!storage) {\n    storage = [];\n  }\n\n  if (!isFavorite) {\n    const newStorage = [...storage, drinkInfo];\n    localStorage.setItem('favoriteRecipes', JSON.stringify(newStorage));\n  }\n\n  if (isFavorite) {\n    const newStorage = storage.filter(e => !e.id === idDrink);\n    localStorage.setItem('favoriteRecipes', JSON.stringify(newStorage));\n  }\n}\n\nfunction renderShareAndFavoriteButtons(setIsFavorite, recipeInfo, isFavorite, goToRoute, id) {\n  const url = window.location.href;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"favourite\",\n    onClick: () => clickFavorite(setIsFavorite, recipeInfo, isFavorite),\n    src: favorite,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }\n  }, getIfHasBeenFavorited(id) ? /*#__PURE__*/React.createElement(\"img\", {\n    \"data-testid\": \"favorite-btn\",\n    src: favorite,\n    alt: \"favorite\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }\n  }) : /*#__PURE__*/React.createElement(\"img\", {\n    \"data-testid\": \"favorite-btn\",\n    src: notFavorite,\n    alt: \"favorite\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(CopyToClipboard, {\n    text: url,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    onClick: () => alert('Link copiado!'),\n    className: \"favourite\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    \"data-testid\": \"share-btn\",\n    src: share,\n    alt: \"icon\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 11\n    }\n  }))), goToRoute && /*#__PURE__*/React.createElement(Redirect, {\n    to: `/bebidas/${id}/in-progress`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 21\n    }\n  }));\n}\n\nfunction Buttons() {\n  const [hasStarted, setHasStarted] = useState(false);\n  const [goToRoute, setGoToRoute] = useState(false);\n  const [isFavorite, setIsFavorite] = useState(false);\n  const {\n    recipeInfo,\n    id\n  } = useContext(DrinkContext);\n  useEffect(() => {\n    if (getIfHasBeenFavorited(id)) {\n      setIsFavorite(true);\n    }\n  }, [id]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"bottom-buttons\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 5\n    }\n  }, !hasStarted && !getLocalStorage(id).done && !getLocalStorage(id).started && /*#__PURE__*/React.createElement(\"button\", {\n    \"data-testid\": \"start-recipe-btn\",\n    type: \"button\",\n    onClick: () => changeRecipeStatus(setHasStarted, recipeInfo, hasStarted, setGoToRoute),\n    className: \"start-button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 9\n    }\n  }, \"Iniciar Receita\"), getLocalStorage(id).started && !getLocalStorage(id).done && /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"start-button\",\n    \"data-testid\": \"start-recipe-btn\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 9\n    }\n  }, \"Continuar Receita\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"share-and-favourite\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 7\n    }\n  }, renderShareAndFavoriteButtons(setIsFavorite, recipeInfo, isFavorite, goToRoute, id)));\n}\n\nexport default Buttons;","map":{"version":3,"sources":["/home/diego/Projetos/Projeto-Receita/sd-03-recipes-app-04/src/components/DrinkButtons.jsx"],"names":["React","useState","useContext","useEffect","Redirect","CopyToClipboard","DrinkContext","getLocalStorage","getIfHasBeenFavorited","changeRecipeStatus","setHasStarted","recipeInfo","hasStarted","setGoToRoute","idDrink","strDrink","strDrinkThumb","strAlcoholic","strCategory","drinkInfo","id","type","area","category","alcoholicOrNot","name","image","doneDate","undefined","tags","storage","JSON","parse","localStorage","getItem","newStorage","setItem","stringify","clickFavorite","setIsFavorite","isFavorite","fav","filter","e","renderShareAndFavoriteButtons","goToRoute","url","window","location","href","favorite","notFavorite","alert","share","Buttons","done","started"],"mappings":"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","sourcesContent":["import React, { useState, useContext, useEffect } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport CopyToClipboard from 'react-copy-to-clipboard';\nimport { DrinkContext } from './DetailsDrinkScreen';\nimport share from '../images/shareIcon.svg';\nimport notFavorite from '../images/whiteHeartIcon.svg';\nimport favorite from '../images/blackHeartIcon.svg';\nimport { getLocalStorage, getIfHasBeenFavorited } from './FoodButtons';\nimport '../components/CSS/FavoriteRecipes.css';\n\nfunction changeRecipeStatus(setHasStarted, recipeInfo, hasStarted, setGoToRoute) {\n  setGoToRoute(true);\n  setHasStarted(true);\n  const {\n    idDrink, strDrink, strDrinkThumb, strAlcoholic, strCategory,\n  } = recipeInfo;\n  const drinkInfo = {\n    id: idDrink,\n    type: 'bebida',\n    area: '',\n    category: strCategory,\n    alcoholicOrNot: strAlcoholic,\n    name: strDrink,\n    image: strDrinkThumb,\n    doneDate: undefined,\n    tags: undefined,\n  };\n  if (!hasStarted) {\n    let storage = JSON.parse(localStorage.getItem('doneRecipes'));\n    if (!storage) {\n      storage = [];\n    }\n    const newStorage = [...storage, drinkInfo];\n    localStorage.setItem('doneRecipes', JSON.stringify(newStorage));\n  }\n}\n\nfunction clickFavorite(setIsFavorite, recipeInfo, isFavorite) {\n  setIsFavorite((fav) => !fav);\n  const {\n    idDrink, strDrink, strDrinkThumb, strAlcoholic, strCategory,\n  } = recipeInfo;\n  const drinkInfo = {\n    id: idDrink,\n    type: 'bebida',\n    area: '',\n    category: strCategory,\n    alcoholicOrNot: strAlcoholic,\n    name: strDrink,\n    image: strDrinkThumb,\n  };\n  let storage = JSON.parse(localStorage.getItem('favoriteRecipes'));\n  if (!storage) {\n    storage = [];\n  }\n  if (!isFavorite) {\n    const newStorage = [...storage, drinkInfo];\n    localStorage.setItem('favoriteRecipes', JSON.stringify(newStorage));\n  }\n  if (isFavorite) {\n    const newStorage = storage.filter((e) => !e.id === idDrink);\n    localStorage.setItem('favoriteRecipes', JSON.stringify(newStorage));\n  }\n}\n\nfunction renderShareAndFavoriteButtons(setIsFavorite, recipeInfo, isFavorite, goToRoute, id) {\n  const url = window.location.href;\n  return (\n    <div>\n      <button\n        type=\"button\"\n        className=\"favourite\"\n        onClick={() => clickFavorite(setIsFavorite, recipeInfo, isFavorite)}\n        src={favorite}\n      >\n        {getIfHasBeenFavorited(id)\n          ? <img data-testid=\"favorite-btn\" src={favorite} alt=\"favorite\" />\n          : <img data-testid=\"favorite-btn\" src={notFavorite} alt=\"favorite\" />}\n      </button>\n      <CopyToClipboard text={url}>\n        <button\n          type=\"button\"\n          onClick={() => alert('Link copiado!')}\n          className=\"favourite\"\n        >\n          <img data-testid=\"share-btn\" src={share} alt=\"icon\" />\n        </button>\n      </CopyToClipboard>\n      {goToRoute && <Redirect to={`/bebidas/${id}/in-progress`} />}\n    </div>\n  );\n}\n\nfunction Buttons() {\n  const [hasStarted, setHasStarted] = useState(false);\n  const [goToRoute, setGoToRoute] = useState(false);\n  const [isFavorite, setIsFavorite] = useState(false);\n  const { recipeInfo, id } = useContext(DrinkContext);\n  useEffect(() => {\n    if (getIfHasBeenFavorited(id)) { setIsFavorite(true); }\n  }, [id]);\n\n  return (\n    <div className=\"bottom-buttons\">\n      {!hasStarted && !getLocalStorage(id).done && !getLocalStorage(id).started && (\n        <button\n          data-testid=\"start-recipe-btn\"\n          type=\"button\"\n          onClick={() => changeRecipeStatus(setHasStarted,\n            recipeInfo, hasStarted, setGoToRoute)}\n          className=\"start-button\"\n        >\n          Iniciar Receita\n        </button>\n      )}\n      {getLocalStorage(id).started && !getLocalStorage(id).done && (\n        <button\n          type=\"button\"\n          className=\"start-button\"\n          data-testid=\"start-recipe-btn\"\n        >\n          Continuar Receita\n        </button>\n      )}\n      <div className=\"share-and-favourite\">\n        {renderShareAndFavoriteButtons(setIsFavorite, recipeInfo, isFavorite, goToRoute, id)}\n      </div>\n    </div>\n  );\n}\n\nexport default Buttons;\n"]},"metadata":{},"sourceType":"module"}