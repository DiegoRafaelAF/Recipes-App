{"ast":null,"code":"import _slicedToArray from\"/home/diego/GitHub/recipes-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import _defineProperty from\"/home/diego/GitHub/recipes-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _objectSpread from\"/home/diego/GitHub/recipes-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import React,{useEffect,useState}from'react';import{getDrinkByID}from'../services/drink-api';import{mountRecipeList,getIfHasBeenFavorited}from'./functionsProgressScreen';import checkedlist,{checkedList}from'./checklist';import CockTailsRenderRecipesInProgress from'./helpersComponents/CockTailsRenderRecipesInProgress';function getLocalStorage(id){var checkLocalStorage=JSON.parse(localStorage.getItem('inProgressRecipes'));if(checkLocalStorage===null){checkLocalStorage={meals:[],cocktails:[]};}var arr;if(checkLocalStorage.cocktails[id]===undefined){arr=checkedList.checkbox;var newStorage=_objectSpread(_objectSpread({},checkLocalStorage),{},{cocktails:_objectSpread(_objectSpread({},checkLocalStorage.cocktails),{},_defineProperty({},id,arr))});localStorage.setItem('inProgressRecipes',JSON.stringify(newStorage));checkLocalStorage=newStorage;}else{arr=checkLocalStorage.cocktails[id];var _newStorage=_objectSpread(_objectSpread({},checkLocalStorage),{},{cocktails:_objectSpread(_objectSpread({},checkLocalStorage.cocktails),{},_defineProperty({},id,arr))});localStorage.setItem('inProgressRecipes',JSON.stringify(_newStorage));checkLocalStorage=_newStorage;}return checkLocalStorage;}function ProgressDrinkScreen(props){var _useState=useState([]),_useState2=_slicedToArray(_useState,2),inProgressDrink=_useState2[0],setInProgressDrink=_useState2[1];var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),showCopyAlert=_useState4[0],setShowCopyAlert=_useState4[1];var _useState5=useState(false),_useState6=_slicedToArray(_useState5,2),isFavorite=_useState6[0],setIsFavorite=_useState6[1];var _useState7=useState(0),_useState8=_slicedToArray(_useState7,2),countChecked=_useState8[0],setCountChecked=_useState8[1];var _useState9=useState(checkedlist),_useState10=_slicedToArray(_useState9,2),checked=_useState10[0],setChecked=_useState10[1];var ingredientsDoneList=[];var id=props.match.params.id;var checkLocalStorage=getLocalStorage(id);useEffect(function(){getDrinkByID(id).then(function(data){setInProgressDrink(data.drinks[0]);});if(getIfHasBeenFavorited(id)){setIsFavorite(true);}},[id,checkLocalStorage,checked,countChecked]);var data=mountRecipeList(inProgressDrink,checked,ingredientsDoneList);var buttonEnabled=countChecked===data.length;var location=props.location,history=props.history;var pathname=location.pathname;return/*#__PURE__*/React.createElement(CockTailsRenderRecipesInProgress,{values:{data:data,buttonEnabled:buttonEnabled,inProgressDrink:inProgressDrink,showCopyAlert:showCopyAlert,setShowCopyAlert:setShowCopyAlert,checkLocalStorage:checkLocalStorage,isFavorite:isFavorite,id:id,checked:checked,setCountChecked:setCountChecked,setChecked:setChecked,countChecked:countChecked,setIsFavorite:setIsFavorite,pathname:pathname,history:history}});}export default ProgressDrinkScreen;","map":{"version":3,"sources":["/home/diego/GitHub/recipes-app/src/components/ProgressDrinkScreen.jsx"],"names":["React","useEffect","useState","getDrinkByID","mountRecipeList","getIfHasBeenFavorited","checkedlist","checkedList","CockTailsRenderRecipesInProgress","getLocalStorage","id","checkLocalStorage","JSON","parse","localStorage","getItem","meals","cocktails","arr","undefined","checkbox","newStorage","setItem","stringify","ProgressDrinkScreen","props","inProgressDrink","setInProgressDrink","showCopyAlert","setShowCopyAlert","isFavorite","setIsFavorite","countChecked","setCountChecked","checked","setChecked","ingredientsDoneList","match","params","then","data","drinks","buttonEnabled","length","location","history","pathname"],"mappings":"gcAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,CAA2BC,QAA3B,KAA2C,OAA3C,CAEA,OAASC,YAAT,KAA6B,uBAA7B,CACA,OAASC,eAAT,CAA0BC,qBAA1B,KAAuD,2BAAvD,CACA,MAAOC,CAAAA,WAAP,EAAsBC,WAAtB,KAAyC,aAAzC,CACA,MAAOC,CAAAA,gCAAP,KAA6C,sDAA7C,CAEA,QAASC,CAAAA,eAAT,CAAyBC,EAAzB,CAA6B,CAC3B,GAAIC,CAAAA,iBAAiB,CAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,mBAArB,CAAX,CAAxB,CAEA,GAAIJ,iBAAiB,GAAK,IAA1B,CAAgC,CAC9BA,iBAAiB,CAAG,CAAEK,KAAK,CAAE,EAAT,CAAaC,SAAS,CAAE,EAAxB,CAApB,CACD,CAED,GAAIC,CAAAA,GAAJ,CAEA,GAAIP,iBAAiB,CAACM,SAAlB,CAA4BP,EAA5B,IAAoCS,SAAxC,CAAmD,CACjDD,GAAG,CAAGX,WAAW,CAACa,QAAlB,CACA,GAAMC,CAAAA,UAAU,gCACXV,iBADW,MAEdM,SAAS,gCAAON,iBAAiB,CAACM,SAAzB,wBAAqCP,EAArC,CAA0CQ,GAA1C,EAFK,EAAhB,CAIAJ,YAAY,CAACQ,OAAb,CAAqB,mBAArB,CAA0CV,IAAI,CAACW,SAAL,CAAeF,UAAf,CAA1C,EACAV,iBAAiB,CAAGU,UAApB,CACD,CARD,IAQO,CACLH,GAAG,CAAGP,iBAAiB,CAACM,SAAlB,CAA4BP,EAA5B,CAAN,CACA,GAAMW,CAAAA,WAAU,gCACXV,iBADW,MAEdM,SAAS,gCAAON,iBAAiB,CAACM,SAAzB,wBAAqCP,EAArC,CAA0CQ,GAA1C,EAFK,EAAhB,CAIAJ,YAAY,CAACQ,OAAb,CAAqB,mBAArB,CAA0CV,IAAI,CAACW,SAAL,CAAeF,WAAf,CAA1C,EACAV,iBAAiB,CAAGU,WAApB,CACD,CAED,MAAOV,CAAAA,iBAAP,CACD,CACD,QAASa,CAAAA,mBAAT,CAA6BC,KAA7B,CAAoC,eACYvB,QAAQ,CAAC,EAAD,CADpB,wCAC3BwB,eAD2B,eACVC,kBADU,8BAEQzB,QAAQ,CAAC,KAAD,CAFhB,yCAE3B0B,aAF2B,eAEZC,gBAFY,8BAGE3B,QAAQ,CAAC,KAAD,CAHV,yCAG3B4B,UAH2B,eAGfC,aAHe,8BAIM7B,QAAQ,CAAC,CAAD,CAJd,yCAI3B8B,YAJ2B,eAIbC,eAJa,8BAKJ/B,QAAQ,CAACI,WAAD,CALJ,0CAK3B4B,OAL2B,gBAKlBC,UALkB,gBAOlC,GAAMC,CAAAA,mBAAmB,CAAG,EAA5B,CAPkC,GASP1B,CAAAA,EATO,CASIe,KATJ,CAS1BY,KAT0B,CASjBC,MATiB,CASP5B,EATO,CAWlC,GAAMC,CAAAA,iBAAiB,CAAGF,eAAe,CAACC,EAAD,CAAzC,CAEAT,SAAS,CAAC,UAAM,CACdE,YAAY,CAACO,EAAD,CAAZ,CAAiB6B,IAAjB,CAAsB,SAACC,IAAD,CAAU,CAC9Bb,kBAAkB,CAACa,IAAI,CAACC,MAAL,CAAY,CAAZ,CAAD,CAAlB,CACD,CAFD,EAGA,GAAIpC,qBAAqB,CAACK,EAAD,CAAzB,CAA+B,CAAEqB,aAAa,CAAC,IAAD,CAAb,CAAsB,CACxD,CALQ,CAKN,CAACrB,EAAD,CAAKC,iBAAL,CAAwBuB,OAAxB,CAAiCF,YAAjC,CALM,CAAT,CAOA,GAAMQ,CAAAA,IAAI,CAAGpC,eAAe,CAACsB,eAAD,CAAkBQ,OAAlB,CAA2BE,mBAA3B,CAA5B,CACA,GAAMM,CAAAA,aAAa,CAAGV,YAAY,GAAKQ,IAAI,CAACG,MAA5C,CArBkC,GAsB1BC,CAAAA,QAtB0B,CAsBJnB,KAtBI,CAsB1BmB,QAtB0B,CAsBhBC,OAtBgB,CAsBJpB,KAtBI,CAsBhBoB,OAtBgB,IAuB1BC,CAAAA,QAvB0B,CAuBbF,QAvBa,CAuB1BE,QAvB0B,CAyBlC,mBACE,oBAAC,gCAAD,EACE,MAAM,CAAE,CACNN,IAAI,CAAJA,IADM,CAENE,aAAa,CAAbA,aAFM,CAGNhB,eAAe,CAAfA,eAHM,CAINE,aAAa,CAAbA,aAJM,CAKNC,gBAAgB,CAAhBA,gBALM,CAMNlB,iBAAiB,CAAjBA,iBANM,CAONmB,UAAU,CAAVA,UAPM,CAQNpB,EAAE,CAAFA,EARM,CASNwB,OAAO,CAAPA,OATM,CAUND,eAAe,CAAfA,eAVM,CAWNE,UAAU,CAAVA,UAXM,CAYNH,YAAY,CAAZA,YAZM,CAaND,aAAa,CAAbA,aAbM,CAcNe,QAAQ,CAARA,QAdM,CAeND,OAAO,CAAPA,OAfM,CADV,EADF,CAqBD,CAOD,cAAerB,CAAAA,mBAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { getDrinkByID } from '../services/drink-api';\nimport { mountRecipeList, getIfHasBeenFavorited } from './functionsProgressScreen';\nimport checkedlist, { checkedList } from './checklist';\nimport CockTailsRenderRecipesInProgress from './helpersComponents/CockTailsRenderRecipesInProgress';\n\nfunction getLocalStorage(id) {\n  let checkLocalStorage = JSON.parse(localStorage.getItem('inProgressRecipes'));\n\n  if (checkLocalStorage === null) {\n    checkLocalStorage = { meals: [], cocktails: [] };\n  }\n\n  let arr;\n\n  if (checkLocalStorage.cocktails[id] === undefined) {\n    arr = checkedList.checkbox;\n    const newStorage = {\n      ...checkLocalStorage,\n      cocktails: { ...checkLocalStorage.cocktails, [id]: arr },\n    };\n    localStorage.setItem('inProgressRecipes', JSON.stringify(newStorage));\n    checkLocalStorage = newStorage;\n  } else {\n    arr = checkLocalStorage.cocktails[id];\n    const newStorage = {\n      ...checkLocalStorage,\n      cocktails: { ...checkLocalStorage.cocktails, [id]: arr },\n    };\n    localStorage.setItem('inProgressRecipes', JSON.stringify(newStorage));\n    checkLocalStorage = newStorage;\n  }\n\n  return checkLocalStorage;\n}\nfunction ProgressDrinkScreen(props) {\n  const [inProgressDrink, setInProgressDrink] = useState([]);\n  const [showCopyAlert, setShowCopyAlert] = useState(false);\n  const [isFavorite, setIsFavorite] = useState(false);\n  const [countChecked, setCountChecked] = useState(0);\n  const [checked, setChecked] = useState(checkedlist);\n\n  const ingredientsDoneList = [];\n\n  const { match: { params: { id } } } = props;\n\n  const checkLocalStorage = getLocalStorage(id);\n\n  useEffect(() => {\n    getDrinkByID(id).then((data) => {\n      setInProgressDrink(data.drinks[0]);\n    });\n    if (getIfHasBeenFavorited(id)) { setIsFavorite(true); }\n  }, [id, checkLocalStorage, checked, countChecked]);\n\n  const data = mountRecipeList(inProgressDrink, checked, ingredientsDoneList);\n  const buttonEnabled = countChecked === data.length;\n  const { location, history } = props;\n  const { pathname } = location;\n\n  return (\n    <CockTailsRenderRecipesInProgress\n      values={{\n        data,\n        buttonEnabled,\n        inProgressDrink,\n        showCopyAlert,\n        setShowCopyAlert,\n        checkLocalStorage,\n        isFavorite,\n        id,\n        checked,\n        setCountChecked,\n        setChecked,\n        countChecked,\n        setIsFavorite,\n        pathname,\n        history,\n      }}\n    />\n  );\n}\nProgressDrinkScreen.propTypes = {\n  match: PropTypes.string.isRequired,\n  location: PropTypes.string.isRequired,\n  history: PropTypes.string.isRequired,\n};\n\nexport default ProgressDrinkScreen;\n"]},"metadata":{},"sourceType":"module"}