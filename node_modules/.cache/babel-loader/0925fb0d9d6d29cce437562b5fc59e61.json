{"ast":null,"code":"var _jsxFileName = \"/home/diego/Projetos/Projeto-Receita/sd-03-recipes-app-04/src/components/LoginScreen.jsx\";\nimport React, { useContext, useState } from 'react';\nimport { ContextAplication } from './context/ContextAplication';\n\nconst IsEmail = (name, email, input, setInput, setInformations) => {\n  if (email.length !== 0 && (email.indexOf('@') < 1 || email.indexOf('.') < 7)) return console.log('errado');\n  return setInput({ ...input,\n    [name]: email\n  }) && setInformations(false);\n};\n\nfunction IsPassword(name, password, input, setInput, setInformations) {\n  setInput({ ...input,\n    [name]: password\n  });\n  if (input.password.length >= 6) return setInformations(false);\n  return setInformations(true);\n}\n\nconst handleChangeInput = (name, ele, input, setInput, setInformations) => {\n  if (name === 'email') return IsEmail(name, ele, input, setInput, setInformations);\n  return IsPassword(name, ele, input, setInput, setInformations);\n}; // const handleFormSubmit = (saveInput, input) => {\n//   saveInput(input);\n// };\n\n\nfunction createForm(saveInput, input, setInput, informations, setInformations) {\n  console.log(input, setInput, informations, setInformations);\n  return /*#__PURE__*/React.createElement(\"form\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }\n  }, \"Login\"), /*#__PURE__*/React.createElement(\"input\", {\n    \"data-testid\": \"email-input\",\n    onChange: ele => handleChangeInput('email', ele.target.value, input, setInput, setInformations),\n    type: \"email\",\n    name: \"email\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    \"data-testid\": \"password-input\",\n    onChange: ele => handleChangeInput('password', ele.target.value, input, setInput, setInformations),\n    type: \"text\",\n    name: \"password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    disabled: informations,\n    \"data-testid\": \"login-submit-btn\" // onClick={handleFormSubmit(saveInput, input)}\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }\n  }, \"Entrar\"));\n}\n\nfunction LoginScreen() {\n  const {\n    saveInput\n  } = useContext(ContextAplication);\n  const [input, setInput] = useState({\n    email: '',\n    password: ''\n  });\n  const [informations, setInformations] = useState(true);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 5\n    }\n  }, createForm(saveInput, input, setInput, informations, setInformations));\n}\n\nexport default LoginScreen;","map":{"version":3,"sources":["/home/diego/Projetos/Projeto-Receita/sd-03-recipes-app-04/src/components/LoginScreen.jsx"],"names":["React","useContext","useState","ContextAplication","IsEmail","name","email","input","setInput","setInformations","length","indexOf","console","log","IsPassword","password","handleChangeInput","ele","createForm","saveInput","informations","target","value","LoginScreen"],"mappings":"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","sourcesContent":["import React, { useContext, useState } from 'react';\nimport { ContextAplication } from './context/ContextAplication';\n\nconst IsEmail = (name, email, input, setInput, setInformations) => {\n  if ((email.length !== 0) && ((email.indexOf('@') < 1) || (email.indexOf('.') < 7))) return console.log('errado');\n  return setInput({ ...input, [name]: email }) && setInformations(false);\n};\n\nfunction IsPassword(name, password, input, setInput, setInformations) {\n  setInput({ ...input, [name]: password });\n  if (input.password.length >= 6) return setInformations(false);\n  return setInformations(true);\n}\n\nconst handleChangeInput = (name, ele, input, setInput, setInformations) => {\n  if (name === 'email') return IsEmail(name, ele, input, setInput, setInformations);\n  return IsPassword(name, ele, input, setInput, setInformations);\n};\n\n// const handleFormSubmit = (saveInput, input) => {\n//   saveInput(input);\n// };\n\nfunction createForm(saveInput, input, setInput, informations, setInformations) {\n  console.log(input, setInput, informations, setInformations);\n  return (\n    <form>\n      <h2>Login</h2>\n      <input\n        data-testid=\"email-input\"\n        onChange={(ele) => handleChangeInput('email', ele.target.value, input, setInput, setInformations)}\n        type=\"email\"\n        name=\"email\"\n      />\n      <input\n        data-testid=\"password-input\"\n        onChange={(ele) => handleChangeInput('password', ele.target.value, input, setInput, setInformations)}\n        type=\"text\"\n        name=\"password\"\n      />\n      <button\n        type=\"button\"\n        disabled={informations}\n        data-testid=\"login-submit-btn\"\n        // onClick={handleFormSubmit(saveInput, input)}\n      >\n        Entrar\n      </button>\n    </form>\n  );\n}\n\nfunction LoginScreen() {\n  const { saveInput } = useContext(ContextAplication);\n  const [input, setInput] = useState({ email: '', password: '' });\n  const [informations, setInformations] = useState(true);\n\n  return (\n    <div>\n      {createForm(saveInput, input, setInput, informations, setInformations)}\n    </div>\n  );\n}\n\nexport default LoginScreen;\n"]},"metadata":{},"sourceType":"module"}