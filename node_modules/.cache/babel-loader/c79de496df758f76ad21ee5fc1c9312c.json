{"ast":null,"code":"var _jsxFileName = \"/home/diego/Projetos/Projeto-Receita/sd-03-recipes-app-04/src/components/DoneRecipes.jsx\";\nimport React, { useState, useEffect } from 'react';\nimport CopyToClipboard from 'react-copy-to-clipboard';\nimport { Link } from 'react-router-dom';\nimport profileIcon from \"../images/profileIcon.svg\";\nimport shareIcon from \"../images/shareIcon.svg\";\nimport '../components/CSS/DoneRecipes.css';\n\nconst header = () => /*#__PURE__*/React.createElement(\"div\", {\n  className: \"header-recipes-done\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 3\n  }\n}, /*#__PURE__*/React.createElement(\"img\", {\n  src: profileIcon,\n  alt: \"ProfileIcon\",\n  \"data-testeid\": \"profile-top-btn\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }\n}), /*#__PURE__*/React.createElement(\"p\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }\n}, \"Receitas Feitas\"));\n\nconst buttons = (setRecipes, state) => {\n  const food = state.filter(e => e.type === 'comida');\n  const drinck = state.filter(e => e.type === 'bebida');\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"test\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"buttons-filter\",\n    \"data-testid\": \"filter-by-all-btn\",\n    onClick: () => setRecipes(state),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }\n  }, \"All\"), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"buttons-filter\",\n    \"data-testid\": \"filter-by-food-btn\",\n    onClick: () => setRecipes(food),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }\n  }, \"Food\"), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"buttons-filter\",\n    \"data-testid\": \"filter-by-drink-btn\",\n    onClick: () => setRecipes(drinck),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }\n  }, \"Drinks\"));\n}; // const copyToClipboard = (type, id, setHide) => {\n//   navigator.clipboard.writeText(`http://localhost:3000/${type}s/${id}`)\n//     .then(() => {\n//       setHide(false);\n//       setTimeout(() => {\n//         setHide(true);\n//       }, 2000);\n//     });\n// };\n\n\nconst renderRecipes = recipes => {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    width: \"360\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 5\n    }\n  }, recipes.map(({\n    id,\n    type,\n    category,\n    alcoholicOrNot,\n    name,\n    image,\n    area,\n    doneDate,\n    tags\n  }, idxMap) => {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"recipes-done\",\n      key: name,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Link, {\n      to: `${type}s/${id}`,\n      \"data-testid\": `${idxMap}-horizontal-image`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: image,\n      alt: \"Imagem da Receita Finalizada\",\n      width: \"150px\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 15\n      }\n    })), /*#__PURE__*/React.createElement(\"p\", {\n      \"data-testid\": `${idxMap}-horizontal-top-text`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 13\n      }\n    }, category), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 13\n      }\n    }, area), type === 'bebida' && /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 35\n      }\n    }, alcoholicOrNot), /*#__PURE__*/React.createElement(Link, {\n      to: `${type}s/${id}`,\n      \"data-testid\": `${idxMap}-horizontal-name`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 13\n      }\n    }, name), /*#__PURE__*/React.createElement(\"p\", {\n      \"data-testid\": `${idxMap}-horizontal-done-date`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 13\n      }\n    }, doneDate), tags.map((tag, i) => /*#__PURE__*/React.createElement(\"p\", {\n      key: i,\n      \"data-testid\": `${idxMap}-${tag}-horizontal-tag`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 15\n      }\n    }, `${tag}`)), /*#__PURE__*/React.createElement(CopyToClipboard, {\n      text: window.location.href,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      className: \"share\",\n      type: \"button\",\n      \"data-testid\": `${idxMap}-horizontal-share-btn`,\n      onClick: () => alert('Link copiado!'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: shareIcon,\n      alt: \"icon\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 17\n      }\n    }))));\n  }));\n};\n\nconst DoneRecipes = () => {\n  const [recipes, setRecipes] = useState(JSON.parse(localStorage.getItem('doneRecipes')));\n  const state = JSON.parse(localStorage.getItem('doneRecipes'));\n  useEffect(() => {\n    renderRecipes(recipes);\n  }, [recipes]);\n  console.log(recipes);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 5\n    }\n  }, state && header(), state && buttons(setRecipes, state), recipes && renderRecipes(recipes));\n};\n\nexport default DoneRecipes;","map":{"version":3,"sources":["/home/diego/Projetos/Projeto-Receita/sd-03-recipes-app-04/src/components/DoneRecipes.jsx"],"names":["React","useState","useEffect","CopyToClipboard","Link","header","profileIcon","buttons","setRecipes","state","food","filter","e","type","drinck","renderRecipes","recipes","map","id","category","alcoholicOrNot","name","image","area","doneDate","tags","idxMap","tag","i","window","location","href","alert","shareIcon","DoneRecipes","JSON","parse","localStorage","getItem","console","log"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport CopyToClipboard from 'react-copy-to-clipboard';\nimport { Link } from 'react-router-dom';\n\nimport profileIcon from '../images/profileIcon.svg';\nimport shareIcon from '../images/shareIcon.svg';\nimport '../components/CSS/DoneRecipes.css';\n\nconst header = () => (\n  <div className=\"header-recipes-done\">\n    <img\n      src={profileIcon}\n      alt=\"ProfileIcon\"\n      data-testeid=\"profile-top-btn\"\n    />\n    <p>Receitas Feitas</p>\n  </div>\n);\n\nconst buttons = (setRecipes, state) => {\n  const food = state.filter((e) => e.type === 'comida');\n  const drinck = state.filter((e) => e.type === 'bebida');\n  return (\n    <div className=\"test\">\n      <button\n        type=\"button\"\n        className=\"buttons-filter\"\n        data-testid=\"filter-by-all-btn\"\n        onClick={() => setRecipes(state)}\n      >\n        All\n      </button>\n      <button\n        type=\"button\"\n        className=\"buttons-filter\"\n        data-testid=\"filter-by-food-btn\"\n        onClick={() => setRecipes(food)}\n      >\n        Food\n      </button>\n      <button\n        type=\"button\"\n        className=\"buttons-filter\"\n        data-testid=\"filter-by-drink-btn\"\n        onClick={() => setRecipes(drinck)}\n      >\n        Drinks\n      </button>\n    </div>\n  );\n};\n\n// const copyToClipboard = (type, id, setHide) => {\n//   navigator.clipboard.writeText(`http://localhost:3000/${type}s/${id}`)\n//     .then(() => {\n//       setHide(false);\n//       setTimeout(() => {\n//         setHide(true);\n//       }, 2000);\n//     });\n// };\n\nconst renderRecipes = (recipes) => {\n  return (\n    <div width=\"360\">\n      {recipes.map(({\n        id,\n        type,\n        category,\n        alcoholicOrNot,\n        name,\n        image,\n        area,\n        doneDate,\n        tags,\n      }, idxMap) => {\n        return (\n          <div className=\"recipes-done\" key={name}>\n            <Link to={`${type}s/${id}`} data-testid={`${idxMap}-horizontal-image`}>\n              <img\n                src={image}\n                alt=\"Imagem da Receita Finalizada\"\n                width=\"150px\"\n              />\n            </Link>\n            <p data-testid={`${idxMap}-horizontal-top-text`}>{category}</p>\n            <p>{area}</p>\n            {type === 'bebida' && <p>{alcoholicOrNot}</p>}\n            <Link to={`${type}s/${id}`} data-testid={`${idxMap}-horizontal-name`}>{name}</Link>\n            <p data-testid={`${idxMap}-horizontal-done-date`}>{doneDate}</p>\n            {tags.map((tag, i) => (\n              <p key={i} data-testid={`${idxMap}-${tag}-horizontal-tag`}>{`${tag}`}</p>\n            ))}\n            <CopyToClipboard text={window.location.href}>\n              <button\n                className=\"share\"\n                type=\"button\"\n                data-testid={`${idxMap}-horizontal-share-btn`}\n                onClick={() => alert('Link copiado!')}\n              >\n                <img src={shareIcon} alt=\"icon\" />\n              </button>\n            </CopyToClipboard>\n          </div>\n        );\n      })}\n    </div>\n  );\n};\n\nconst DoneRecipes = () => {\n  const [recipes, setRecipes] = useState(JSON.parse(localStorage.getItem('doneRecipes')));\n  const state = JSON.parse(localStorage.getItem('doneRecipes'));\n\n  useEffect(() => {\n    renderRecipes(recipes);\n  }, [recipes]);\n\n  console.log(recipes);\n  return (\n    <div className=\"container\">\n      {state && header()}\n      {state && buttons(setRecipes, state)}\n      {recipes && renderRecipes(recipes)}\n    </div>\n  );\n};\n\nexport default DoneRecipes;\n"]},"metadata":{},"sourceType":"module"}