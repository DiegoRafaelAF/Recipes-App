{"ast":null,"code":"var _jsxFileName = \"/home/diego/Projetos/Projeto-Receita/sd-03-recipes-app-04/src/components/LoginScreen.jsx\";\nimport React, { useContext, useState } from 'react';\nimport { ContextAplication } from '../context/ContextAplication';\nconst [input, setInput] = useState({\n  email: '',\n  password: ''\n});\nconst [informations, setInformations] = useState(false);\n\nconst IsEmail = (name, email) => {\n  const exclude = '/[^@-.w]|^[_@.-]|[._-]{2}|[@.]{2}|(@)[^@]*1/';\n  const check = '/@[w-]+./';\n  const checkend = '/.[a-zA-Z]{2,3}$/';\n\n  if (email.search(exclude) !== -1 || email.search(check) === -1 || email.search(checkend) === -1) {\n    return setInput({ ...input,\n      [name]: email\n    }) && setInformations(false);\n  }\n\n  return setInput({ ...input,\n    [name]: email\n  }) && setInformations(true);\n};\n\nconst IsPassword = (name, password) => {\n  setInput({ ...input,\n    [name]: password\n  });\n  if (input.password.length >= 6) return setInformations(true);\n  return null;\n};\n\nconst handleChangeInput = (name, ele) => {\n  if (name === 'email') return IsEmail(name, ele);\n  return IsPassword(name, ele);\n};\n\nconst handleFormSubmit = saveInput => {\n  saveInput(input);\n};\n\nconst createForm = event => {\n  return /*#__PURE__*/React.createElement(\"form\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }\n  }, \"Login\"), /*#__PURE__*/React.createElement(\"input\", {\n    \"data-testid\": \"email-input\",\n    onChange: ele => handleChangeInput('email', ele.target.value),\n    type: \"text\",\n    name: \"email\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    \"data-testid\": \"password-input\",\n    onChange: ele => handleChangeInput('password', ele.target.value),\n    type: \"text\",\n    name: \"password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    disabled: informations,\n    \"data-testid\": \"login-submit-btn\",\n    onClick: () => handleFormSubmit(event),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }\n  }, \"Entrar\"));\n};\n\nfunction LoginScreen() {\n  const {\n    saveInput\n  } = useContext(ContextAplication);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 10\n    }\n  }, createForm(saveInput));\n}\n\nexport default LoginScreen;","map":{"version":3,"sources":["/home/diego/Projetos/Projeto-Receita/sd-03-recipes-app-04/src/components/LoginScreen.jsx"],"names":["React","useContext","useState","ContextAplication","input","setInput","email","password","informations","setInformations","IsEmail","name","exclude","check","checkend","search","IsPassword","length","handleChangeInput","ele","handleFormSubmit","saveInput","createForm","event","target","value","LoginScreen"],"mappings":"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","sourcesContent":["import React, { useContext, useState } from 'react';\nimport { ContextAplication } from '../context/ContextAplication';\n\nconst [input, setInput] = useState({ email: '', password: '' });\nconst [informations, setInformations] = useState(false);\n\nconst IsEmail = (name, email) => {\n  const exclude = '/[^@-.w]|^[_@.-]|[._-]{2}|[@.]{2}|(@)[^@]*1/';\n  const check = '/@[w-]+./';\n  const checkend = '/.[a-zA-Z]{2,3}$/';\n  if (\n    email.search(exclude) !== -1 ||\n    email.search(check) === -1 ||\n    email.search(checkend) === -1\n  ) {\n    return setInput({ ...input, [name]: email }) && setInformations(false);\n  }\n  return setInput({ ...input, [name]: email }) && setInformations(true);\n};\n\nconst IsPassword = (name, password) => {\n  setInput({ ...input, [name]: password });\n  if (input.password.length >= 6) return setInformations(true);\n  return null;\n}\n\nconst handleChangeInput = (name, ele) => {\n  if (name === 'email') return IsEmail(name, ele)\n  return IsPassword(name, ele);\n};\n\nconst handleFormSubmit = (saveInput) => {\n  saveInput(input);\n};\n\nconst createForm = (event) => {\n  return (\n    <form>\n      <h2>Login</h2>\n      <input\n        data-testid=\"email-input\"\n        onChange={(ele) => handleChangeInput('email', ele.target.value)}\n        type=\"text\"\n        name=\"email\"\n      />\n      <input\n        data-testid=\"password-input\"\n        onChange={(ele) => handleChangeInput('password', ele.target.value)}\n        type=\"text\"\n        name=\"password\"\n      />\n      <button\n        disabled={informations}\n        data-testid=\"login-submit-btn\"\n        onClick={() => handleFormSubmit(event)}\n      >\n        Entrar\n      </button>\n    </form>\n  );\n};\n\nfunction LoginScreen() {\n  const { saveInput } = useContext(ContextAplication);\n\n  return <div>{createForm(saveInput)}</div>;\n}\n\nexport default LoginScreen;\n"]},"metadata":{},"sourceType":"module"}